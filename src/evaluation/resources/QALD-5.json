[
    {
        "id": 1,
        "string": "Give me all cosmonauts.",
        "sparql": {
            "sparql": " PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Astronaut . { ?uri dbo:nationality res:Russia . } UNION { ?uri dbo:nationality res:Soviet_Union . } } "
        }
    },
    {
        "id": 2,
        "string": "Give me the birthdays of all actors of the television show Charmed.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?date WHERE { res:Charmed dbo:starring ?actor . ?actor dbo:birthDate ?date .}"
        }
    },
    {
        "id": 3,
        "string": "Who is the daughter of Robert Kennedy married to?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:Robert_F._Kennedy dbo:child ?child . ?child dbo:spouse ?uri .}"
        }
    },
    {
        "id": 4,
        "string": "Which river does the Brooklyn Bridge cross?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Brooklyn_Bridge dbo:crosses ?uri . }"
        }
    },
    {
        "id": 5,
        "string": "How many countries are there in Europe?",
        "sparql": {
            "sparql": "PREFIX yago: <http://dbpedia.org/clas/yago/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT COUNT(DISTINCT ?uri) WHERE { ?uri rdf:type yago:EuropeanCountries .}"
        }
    },
    {
        "id": 6,
        "string": "In which city did John F. Kennedy die?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { res:John_F._Kennedy dbo:deathPlace ?uri . ?uri rdf:type dbo:City .}"
        }
    },
    {
        "id": 7,
        "string": "Was the wife of president Lincoln called Mary?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdfs: <http://w.w3.org/20/01/rdf-schema#>ASK WHERE { res:Abraham_Lincoln dbo:spouse ?spouse . ?spouse rdfs:label ?name . FILTER(regex(?name,'Mary') }"
        }
    },
    {
        "id": 8,
        "string": "Which states of Germany are governed by the Social Democratic Party?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX yago: <http://dbpedia.org/clas/yago/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type yago:StatesOfGermany . { ?uri dbo:leaderParty res:Social_Democratic_Party_of_Germany . } UNION { ?uri dbp:rulingParty 'SPD'@en . } }"
        }
    },
    {
        "id": 9,
        "string": "In which U.S. state is Mount McKinley located?",
        "sparql": {
            "sparql": "PREFIX yago: <http://dbpedia.org/clas/yago/>PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type yago:StatesOfTheUnitedStates . res:Mount_McKinley dbo:locatedInArea ?uri . }"
        }
    },
    {
        "id": 10,
        "string": "In which country does the Ganges start?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Ganges dbo:sourceCountry ?uri .} "
        }
    },
    {
        "id": 11,
        "string": "Which countries have more than ten caves?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country . ?cave rdf:type dbo:Cave . { ?cave dbo:location ?uri . } UNION { ?cave dbo:location ?loc . ?loc dbo:country ?uri . } } GROUP BY ?uri HAVING(COUNT(?cave) > 10) "
        }
    },
    {
        "id": 12,
        "string": "Is proinsulin a protein?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> ASK WHERE { res:Proinsulin rdf:type dbo:Protein . } "
        }
    },
    {
        "id": 13,
        "string": "Are tree frogs a type of amphibian?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Hylidae dbo:clas res:Amphibian . } "
        }
    },
    {
        "id": 14,
        "string": "How tall is Claudia Schiffer?",
        "sparql": {
            "sparql": " PREFIX res: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?height WHERE { res:Claudia_Schiffer dbo:height ?height . } "
        }
    },
    {
        "id": 15,
        "string": "Who created Goofy?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Goofy dbo:creator ?uri . } "
        }
    },
    {
        "id": 16,
        "string": "Give me the capitals of all countries in Africa.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX yago: <http://dbpedia.org/clas/yago/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?states rdf:type yago:AfricanCountries . ?states dbo:capital ?uri . } "
        }
    },
    {
        "id": 17,
        "string": "Give me all cities in New Jersey with more than 100000 inhabitants.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:City . ?uri dbo:isPartOf res:New_Jersey . ?uri dbo:populationTotal ?inhabitants . FILTER (?inhabitants > 10) . } "
        }
    },
    {
        "id": 18,
        "string": "Which museum exhibits The Scream by Munch?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:The_Scream dbo:museum ?uri .}"
        }
    },
    {
        "id": 19,
        "string": "Is Egypts largest city also its capital?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/>ASK WHERE { res:Egypt dbo:largestCity ?large . res:Egypt dbo:capital ?capital . FILTER (?large = ?capital)}"
        }
    },
    {
        "id": 20,
        "string": "How many employees does IBM have?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?number WHERE { res:IBM dbo:numberOfEmployees ?number .}"
        }
    },
    {
        "id": 21,
        "string": "Which states border Illinois?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbp: <http://dbpedia.org/property/>SELECT DISTINCT ?uri WHERE { res:Illinois dbp:borderingstates ?uri .}"
        }
    },
    {
        "id": 22,
        "string": "In which country is the Limerick Lake?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:Limerick_Lake dbo:country ?uri .}"
        }
    },
    {
        "id": 23,
        "string": "Which television shows were created by John Cleese?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:TelevisionShow . ?uri dbo:creator res:John_Cleese .}"
        }
    },
    {
        "id": 24,
        "string": "Which mountain is the highest after the Annapurna?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { res:Annapurna dbo:elevation ?elevation . ?uri rdf:type dbo:Mountain . ?uri dbo:elevation ?otherelevation . FILTER (?otherelevation < ?elevation) .} ORDER BY DESC(?otherelevation) OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 25,
        "string": "In which films directed by Garry Marshall was Julia Roberts starring?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Film . ?uri dbo:starring res:Julia_Roberts . ?uri dbo:director res:Garry_Marshall .}"
        }
    },
    {
        "id": 26,
        "string": "Which bridges are of the same type as the Manhattan Bridge?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Bridge . ?uri dbp:design ?design . res:Manhattan_Bridge dbp:design ?mdesign . FILTER (?design = ?mdesign & ?uri != res:Manhattan_Bridge) . }"
        }
    },
    {
        "id": 27,
        "string": "Was U.S. president Jackson involved in a war?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>ASK WHERE { res:Andrew_Jackson dbo:battle ?batle . }"
        }
    },
    {
        "id": 28,
        "string": "Give me all communist countries.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Country . { ?uri dbo:governmentType res:Communism . } UNION { ?uri dbo:governmentType res:Communist_state . }"
        }
    },
    {
        "id": 29,
        "string": "Which awards did Douglas Hofstadter win?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/>SELECT DISTINCT ?uriWHERE { res:Douglas_Hofstadter dbo:award ?uri .}"
        }
    },
    {
        "id": 30,
        "string": "Which U.S. state has the highest population density?",
        "sparql": {
            "sparql": "PREFIX yago: <http://dbpedia.org/clas/yago/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:StatesOfTheUnitedStates . ?uri dbp:densityrank ?rank .} ORDER BY ASC(?rank) OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 31,
        "string": "What is the currency of the Czech Republic?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Czech_Republic dbo:currency ?uri .}"
        }
    },
    {
        "id": 32,
        "string": "Which countries adopted the Euro?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Country . { ?uri dbo:currency res:Euro . } UNION { ?uri dbp:curencyCode 'EUR'@en . }"
        }
    },
    {
        "id": 33,
        "string": "What is the area code of Berlin?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?string WHERE { res:Berlin dbo:areaCode ?string .}"
        }
    },
    {
        "id": 34,
        "string": "Which countries have more than two official languages?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Country . ?uri dbo:officialLanguage ?language .} GROUP BY ?uriHAVING (COUNT(?language) > 2)"
        }
    },
    {
        "id": 35,
        "string": "Who is the owner of Rolls-Royce?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Rolls-Royce_Motors dbo:owner ?uri .}"
        }
    },
    {
        "id": 36,
        "string": "Through which countries does the Yenisei river flow?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/>SELECT DISTINCT ?uri WHERE { res:Yenisei dbo:country ?uri .}"
        }
    },
    {
        "id": 37,
        "string": "When did Latvia join the EU?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbp: <http://dbpedia.org/property/>SELECT DISTINCT ?date WHERE { res:Latvia dbp:acesioneudate ?date . }"
        }
    },
    {
        "id": 38,
        "string": "Which monarchs were married to a German?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Monarch . ?uri dbo:spouse ?spouse . { ?spouse dbo:birthPlace res:Germany. } UNION { ?spouse dbo:birthPlace ?p . ?p dbo:country res:Germany. }"
        }
    },
    {
        "id": 39,
        "string": "When was the Battle of Gettysburg?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?date WHERE { res:Battle_of_Gettysburg dbo:date ?date .}"
        }
    },
    {
        "id": 40,
        "string": "What is the highest mountain in Australia?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain . ?uri dbo:locatedInArea res:Australia . ?uri dbo:elevation ?elevation .} ORDER BY DESC(?elevation) OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 41,
        "string": "Give me all soccer clubs in Spain.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:SoccerClub . { ?uri dbo:ground res:Spain . } UNION { ?uri dbp:ground ?ground . FILTER (regex(?ground,'Spain') }"
        }
    },
    {
        "id": 42,
        "string": "What is the official language of Suriname?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Suriname dbo:officialLanguage ?uri .}"
        }
    },
    {
        "id": 43,
        "string": "Who is the mayor of Tel Aviv?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Tel_Aviv dbo:leaderName ?uri .}"
        }
    },
    {
        "id": 44,
        "string": "Who designed the Brooklyn Bridge?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/>SELECT DISTINCT ?uri WHERE { res:Brooklyn_Bridge dbo:architect ?uri .}"
        }
    },
    {
        "id": 45,
        "string": "Which telecommunications organizations are located in Belgium?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT COUNT(DISTINCT ?uri)WHERE { \t ?uri rdf:type dbo:Organisation . { ?uri dbo:industry res:Telecommunication . } UNION { ?uri dbp:industry ?industry . FILTER (regex(?industry,'Telecomunications') . } { ?uri dbo:location res:Belgium. } UNION { ?uri dbp:locationCountry 'Belgium'@en . }"
        }
    },
    {
        "id": 46,
        "string": "Is Frank Herbert still alive?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>ASK WHERE { OPTIONAL { res:Frank_Herbert dbo:deathDate ?date . } FILTER (!BOUND(?date)}"
        }
    },
    {
        "id": 47,
        "string": "What is the highest place of the Urals?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Ural_Mountains dbp:highest ?uri . }"
        }
    },
    {
        "id": 48,
        "string": "Who is the editor of Forbes?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/>SELECT DISTINCT ?uri WHERE { res:Forbes dbo:editor ?uri .}"
        }
    },
    {
        "id": 49,
        "string": "Give me all companies in the advertising industry.",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT COUNT(DISTINCT ?uri)WHERE { ?uri rdf:type dbo:Company . { ?uri dbo:industry res:Advertising } UNION { ?uri dbo:industry ?industry . FILTER regex(?industry,'advertising','i') . }"
        }
    },
    {
        "id": 50,
        "string": "What did Bruce Carver die from?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/>SELECT DISTINCT ?uriWHERE { res:Bruce_Carver dbo:deathCause ?uri . }"
        }
    },
    {
        "id": 51,
        "string": "Give me all libraries established earlier than 1400.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Library . ?uri dbp:established ?year . FILTER (?year < 140)}"
        }
    },
    {
        "id": 52,
        "string": "Which presidents were born in 1945?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:President . ?uri dbo:birthDate ?date . FILTER regex(?date, '^1945') .}"
        }
    },
    {
        "id": 53,
        "string": "Give me all federal chancellors of Germany.",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Person . { ?uri dbo:office 'Chancelor of Germany' . } UNION { ?uri dbp:ofice res:Chancellor_of_Germany . }"
        }
    },
    {
        "id": 54,
        "string": "Who was the wife of U.S. president Lincoln?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:Abraham_Lincoln dbo:spouse ?uri.}"
        }
    },
    {
        "id": 55,
        "string": "Who developed the video game World of Warcraft?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:World_of_Warcraft dbo:developer ?uri . }"
        }
    },
    {
        "id": 56,
        "string": "What is the official website of Tom Cruise?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?string WHERE { res:Tom_Cruise dbp:website ?string .}"
        }
    },
    {
        "id": 57,
        "string": "List all episodes of the first season of the HBO television series The Sopranos.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { ?uri dbo:series res:The_Sopranos . ?uri dbo:seasonNumber 1 .}"
        }
    },
    {
        "id": 58,
        "string": "Who produced the most films?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?film rdf:type dbo:Film . ?film dbo:producer ?uri .} ORDER BY DESC(COUNT(?film) OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 59,
        "string": "Give me all people with first name Jimmy.",
        "sparql": {
            "sparql": "PREFIX foaf: <http://xmlns.com/foaf/0.1/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type foaf:Person . ?uri foaf:givenName 'Jimy'@en .}"
        }
    },
    {
        "id": 60,
        "string": "Is there a video game called Battle Chess?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>PREFIX rdfs: <http://w.w3.org/20/01/rdf-schema#>ASK WHERE { ?uri rdf:type dbo:VideoGame . ?uri rdfs:label 'Batle Ches'@en .}"
        }
    },
    {
        "id": 61,
        "string": "Which mountains are higher than the Nanga Parbat?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { res:Nanga_Parbat dbo:elevation ?elevation . ?uri rdf:type dbo:Mountain . { ?uri dbo:elevation ?otherelevation . } UNION { ?uri dbp:elevationM ?otherelevation . } FILTER (?otherelevation > ?elevation) .}"
        }
    },
    {
        "id": 62,
        "string": "Who created Wikipedia?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Wikipedia dbo:author ?uri .}"
        }
    },
    {
        "id": 63,
        "string": "Give me all actors starring in Last Action Hero.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Last_Action_Hero dbo:starring ?uri . }"
        }
    },
    {
        "id": 64,
        "string": "Which software has been developed by organizations founded in California?",
        "sparql": {
            "sparql": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Software . ?company rdf:type dbo:Company . ?uri dbo:developer ?company . ?company dbo:foundationPlace res:California . }"
        }
    },
    {
        "id": 65,
        "string": "Which companies work in the aerospace industry as well as in medicine?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company . ?uri dbo:industry res:Aerospace . ?uri dbo:industry res:Medicine .}"
        }
    },
    {
        "id": 66,
        "string": "Is Christian Bale starring in Velvet Goldmine?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>ASKWHERE { res:Velvet_Goldmine dbo:starring res:Christian_Bale .}"
        }
    },
    {
        "id": 67,
        "string": "Give me the websites of companies with more than 500000 employees.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>PREFIX xsd: <http://w.w3.org/201/XMLSchema#>SELECT DISTINCT ?stringWHERE { ?c rdf:type dbo:Company . { ?c dbo:numberOfEmployees ?employes . } UNION { ?c dbp:numEmployes ?employes . } FILTER( xsd:integer(?employes) > 50 ) . ?c dbp:homepage ?string .}"
        }
    },
    {
        "id": 68,
        "string": "Which actors were born in Germany?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Actor . { ?uri dbo:birthPlace res:Germany . } UNION { ?uri dbo:birthPlace ?place . ?place dbo:country res:Germany . }"
        }
    },
    {
        "id": 69,
        "string": "Which caves have more than 3 entrances?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Cave . ?uri dbp:entranceCount ?entrance . FILTER (?entrance > 3) .}"
        }
    },
    {
        "id": 70,
        "string": "Give me all films produced by Hal Roach.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film . ?uri dbo:producer res:Hal_Roach .}"
        }
    },
    {
        "id": 71,
        "string": "Give me all video games published by Mean Hamster Software.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:VideoGame . ?uri dbo:publisher res:Mean_Hamster_Software . }"
        }
    },
    {
        "id": 72,
        "string": "Which languages are spoken in Estonia?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { ?uri dbo:spokenIn res:Estonia . }"
        }
    },
    {
        "id": 73,
        "string": "How many Aldi stores are there?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/>SELECT DISTINCT ?numberWHERE { res:Aldi dbo:numberOfLocations ?number .}"
        }
    },
    {
        "id": 74,
        "string": "Which capitals in Europe were host cities of the summer olympic games?",
        "sparql": {
            "sparql": "PREFIX yago: <http://dbpedia.org/clas/yago/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:CapitalsInEurope . ?uri rdf:type yago:HostCitiesOfTheSumerOlympicGames .}"
        }
    },
    {
        "id": 75,
        "string": "Who was the 16th president of the United States?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri dbo:office 'President of the United States' . ?uri dbo:orderInOffice '16th' .}"
        }
    },
    {
        "id": 76,
        "string": "How many films did Hal Roach produce?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT COUNT(DISTINCT ?uri) WHERE { ?uri dbo:producer res:Hal_Roach .}"
        }
    },
    {
        "id": 77,
        "string": "Which music albums contain the song Last Christmas?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdfs: <http://w.w3.org/20/01/rdf-schema#>SELECT DISTINCT ?uri WHERE { ?single dbo:album ?uri . ?single rdfs:label 'Last Christmas'@en .}"
        }
    },
    {
        "id": 78,
        "string": "Give me all books written by Danielle Steel.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book . ?uri dbo:author res:Danielle_Steel .}"
        }
    },
    {
        "id": 79,
        "string": "Which airports are located in California, USA?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Airport . { ?uri dbo:location res:California . } UNION { ?uri dbo:city res:California . } UNION { ?uri dbo:city ?city . ?city dbo:isPartOf res:California . } UNION { ?uri dbo:operator res:California . } }"
        }
    },
    {
        "id": 80,
        "string": "Give me all Canadian Grunge record labels.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:RecordLabel . ?uri dbo:genre res:Grunge . ?uri dbo:country res:Canada .}"
        }
    },
    {
        "id": 81,
        "string": "Which country has the most official languages?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Country . ?uri dbp:oficialLanguages ?language .} ORDER BY DESC(COUNT(?language) OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 82,
        "string": "In which programming language is GIMP written?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:GIMP dbo:programmingLanguage ?uri .}"
        }
    },
    {
        "id": 83,
        "string": "Who produced films starring Natalie Portman?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?film rdf:type dbo:Film . ?film dbo:starring res:Natalie_Portman . ?film dbo:producer ?uri .}"
        }
    },
    {
        "id": 84,
        "string": "Give me all movies with Tom Cruise.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Film. ?uri dbo:starring res:Tom_Cruise .}"
        }
    },
    {
        "id": 85,
        "string": "In which films did Julia Roberts as well as Richard Gere play?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film . ?uri dbo:starring res:Julia_Roberts . ?uri dbo:starring res:Richard_Gere..}"
        }
    },
    {
        "id": 86,
        "string": "Give me all female given names.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:GivenName . ?uri dbo:gender res:Female .}"
        }
    },
    {
        "id": 87,
        "string": "Who wrote the book The Pillars of the Earth?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:The_Pillars_of_the_Earth dbo:author ?uri .}"
        }
    },
    {
        "id": 88,
        "string": "How many films did Leonardo DiCaprio star in?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT COUNT(DISTINCT ?uri) WHERE { ?uri rdf:type dbo:Film . ?uri dbo:starring res:Leonardo_DiCaprio . }"
        }
    },
    {
        "id": 89,
        "string": "Give me all soccer clubs in the Premier League.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:SoccerClub . ?uri dbo:league res:Premier_League . }"
        }
    },
    {
        "id": 90,
        "string": "When was Capcom founded?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?date WHERE { res:Capcom dbo:foundingDate ?date .}"
        }
    },
    {
        "id": 91,
        "string": "Which organizations were founded in 1930?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Organisation . { ?uri dbo:formationYear ?date . } UNION { ?uri dbo:foundingYear ?date. } FILTER regex(?date,'^1930') . }"
        }
    },
    {
        "id": 92,
        "string": "What is the highest mountain?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain . ?uri dbo:elevation ?elevation .} ORDER BY DESC(?elevation) OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 93,
        "string": "Was Natalie Portman born in the United States?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>ASK WHERE { { res:Natalie_Portman dbo:birthPlace res:United_States . } UNION { res:Natalie_Portman dbo:birthPlace ?city . ?city dbo:country res:United_States . }"
        }
    },
    {
        "id": 101,
        "string": "Which German cities have more than 250000 inhabitants?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { { ?uri rdf:type dbo:City . } UNION { ?uri rdf:type dbo:Town . } ?uri dbo:country res:Germany . ?uri dbo:populationTotal ?population . FILTER ( ?population > 250 ) } "
        }
    },
    {
        "id": 102,
        "string": "Who was John F. Kennedy's vice president?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:vicePresident ?uri . } "
        }
    },
    {
        "id": 103,
        "string": "Who is the mayor of Berlin?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Berlin dbo:leader ?uri . } "
        }
    },
    {
        "id": 104,
        "string": "How many students does the Free University in Amsterdam have?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:VU_University_Amsterdam dbo:numberOfStudents ?num . } "
        }
    },
    {
        "id": 105,
        "string": "What is the second highest mountain on Earth?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Mountain . ?uri dbo:elevation ?elevation . } ORDER BY DESC(?elevation) OFSET 1 LIMIT 1 "
        }
    },
    {
        "id": 106,
        "string": "Give me all professional skateboarders from Sweden.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation res:Skateboarding . { ?uri dbo:birthPlace res:Sweden . } UNION { ?uri dbo:birthPlace ?place . ?place dbo:country res:Sweden . } } "
        }
    },
    {
        "id": 107,
        "string": "When was Alberta admitted as province?",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Alberta dbp:admitancedate ?date . } "
        }
    },
    {
        "id": 108,
        "string": "To which countries does the Himalayan mountain system extend?",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Himalayas dbp:country ?uri . } "
        }
    },
    {
        "id": 109,
        "string": "Give me a list of all bandleaders that play trumpet.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation res:Bandleader . ?uri dbo:instrument res:Trumpet . } "
        }
    },
    {
        "id": 110,
        "string": "What is the total amount of men and women serving in the FDNY?",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:New_York_City_Fire_Department dbp:employes ?num . } "
        }
    },
    {
        "id": 111,
        "string": "Who is the Formula 1 race driver with the most races?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:FormulaOneRacer . ?uri dbo:races ?x . } ORDER BY DESC(?x) OFSET 0 LIMIT 1 "
        }
    },
    {
        "id": 112,
        "string": "Give me all world heritage sites designated within the past two years.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://w.w3.org/201/XMLSchema#> SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:WorldHeritageSite . { ?uri dbp:year '2013'^xsd:integer . } UNION { ?uri dbp:year '2014'^xsd:integer . } "
        }
    },
    {
        "id": 113,
        "string": "Who is the youngest player in the Premier League?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:team ?x . ?x dbo:league res:Premier_League . ?uri dbo:birthDate ?y . } ORDER BY DESC(?y) OFSET 0 LIMIT 1 "
        }
    },
    {
        "id": 114,
        "string": "Give me all members of Prodigy.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:The_Prodigy dbo:bandMember ?uri . } "
        }
    },
    {
        "id": 115,
        "string": "What is the longest river?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:River . { ?uri dbo:length ?l . } UNION { ?uri dbp:length ?l . } } ORDER BY DESC(?l) OFSET 0 LIMIT 1 "
        }
    },
    {
        "id": 116,
        "string": "Does Breaking Bad have more episodes than Game of Thrones?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Breaking_Bad dbo:numberOfEpisodes ?x . res:Game_of_Thrones dbo:numberOfEpisodes ?y . FILTER (?x > ?y) } "
        }
    },
    {
        "id": 117,
        "string": "Give me all cars that are produced in Germany.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Automobile . { ?uri dbo:assembly res:Germany . } UNION { ?uri dbp:asembly res:Germany . } UNION { { ?uri dbo:manufacturer ?x . } UNION { ?uri dbp:manufacturer ?x . } { ?x dbo:locationCountry res:Germany . } UNION { ?x dbo:location res:Germany . } } } "
        }
    },
    {
        "id": 119,
        "string": "Give me all people that were born in Vienna and died in Berlin.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:birthPlace res:Vienna . ?uri dbo:deathPlace res:Berlin . } "
        }
    },
    {
        "id": 120,
        "string": "How tall is Michael Jordan?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Michael_Jordan dbo:height ?num . } "
        }
    },
    {
        "id": 121,
        "string": "What is the capital of Canada?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Canada dbo:capital ?uri . } "
        }
    },
    {
        "id": 122,
        "string": "Who is the governor of Wyoming?",
        "sparql": {
            "sparql": " PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Wyoming dbp:governor ?uri . } "
        }
    },
    {
        "id": 123,
        "string": "Do Prince Harry and Prince William have the same parents?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> ASKWHERE { <http://dbpedia.org/resource/Prince_Wiliam,_Duke_of_Cambridge> dbo:parent ?x . <http://dbpedia.org/resource/Prince_Hary> dbo:parent ?x .} "
        }
    },
    {
        "id": 124,
        "string": "Who was the father of Queen Elizabeth II?",
        "sparql": {
            "sparql": " PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Elizabeth_I dbp:father ?uri . } "
        }
    },
    {
        "id": 125,
        "string": "Which U.S. state has been admitted latest?",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> PREFIX yago: <http://dbpedia.org/clas/yago/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:StatesOfTheUnitedStates . ?uri dbp:admitancedate ?x . } ORDER BY DESC(?x) OFSET 0 LIMIT 1 "
        }
    },
    {
        "id": 126,
        "string": "How many languages are spoken in Turkmenistan?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT COUNT(DISTINCT ?x) WHERE { res:Turkmenistan dbo:language ?x . } "
        }
    },
    {
        "id": 127,
        "string": "Sean Parnell is the governor of which U.S. state?",
        "sparql": {
            "sparql": " PREFIX yago: <http://dbpedia.org/clas/yago/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:StatesOfTheUnitedStates . ?uri dbp:governor res:Sean_Parnel . } "
        }
    },
    {
        "id": 128,
        "string": "Give me all movies directed by Francis Ford Coppola.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film . ?uri dbo:director res:Francis_Ford_Coppola . } "
        }
    },
    {
        "id": 129,
        "string": "Give me all actors starring in movies directed by William Shatner.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?x dbo:director res:William_Shatner . ?x dbo:starring ?uri . } "
        }
    },
    {
        "id": 130,
        "string": "What is the birth name of Angela Merkel?",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?string WHERE { res:Angela_Merkel dbp:birthName ?string . } "
        }
    },
    {
        "id": 131,
        "string": "Give me all Methodist politicians.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Politician . ?uri dbo:religion res:Methodism . } "
        }
    },
    {
        "id": 132,
        "string": "How often did Jane Fonda marry?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT COUNT(DISTINCT ?uri) WHERE { res:Jane_Fonda dbo:spouse ?uri . } "
        }
    },
    {
        "id": 133,
        "string": "Give me all Australian nonprofit organizations.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:type res:Nonprofit_organization . { ?uri dbo:locationCountry res:Australia . } UNION { ?uri dbo:location ?x . ?x dbo:country res:Australia . } } "
        }
    },
    {
        "id": 134,
        "string": "In which military conflicts did Lawrence of Arabia participate?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:T._E._Lawrence dbo:battle ?uri . } "
        }
    },
    {
        "id": 135,
        "string": "Who developed Minecraft?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Minecraft dbo:developer ?uri . } "
        }
    },
    {
        "id": 138,
        "string": "How many inhabitants does Maribor have?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?num WHERE { res:Maribor dbo:populationTotal ?num . } "
        }
    },
    {
        "id": 139,
        "string": "Give me all companies in Munich.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company . { ?uri dbo:location res:Munich . } UNION { ?uri dbo:headquarter res:Munich . } UNION { ?uri dbo:locationCity res:Munich . } } "
        }
    },
    {
        "id": 140,
        "string": "List all games by GMT.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:publisher res:GMT_Games . } "
        }
    },
    {
        "id": 141,
        "string": "Who founded Intel?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Intel dbo:foundedBy ?uri . } "
        }
    },
    {
        "id": 142,
        "string": "Who is the husband of Amanda Palmer?",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Amanda_Palmer dbp:spouse ?uri . } "
        }
    },
    {
        "id": 143,
        "string": "Give me all breeds of the German Shepherd dog.",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbp:bred res:German_Shepherd . } "
        }
    },
    {
        "id": 144,
        "string": "Which cities does the Weser flow through?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Weser dbo:city ?uri . } "
        }
    },
    {
        "id": 145,
        "string": "Which countries are connected by the Rhine?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs: <http://w.w3.org/20/01/rdf-schema#> SELECT DISTINCT ?uri WHERE { res:Rhine dbp:country ?string . ?uri rdf:type dbo:Country . ?uri rdfs:label ?string . } "
        }
    },
    {
        "id": 146,
        "string": "Which professional surfers were born in Australia?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:occupation res:Surfing . { ?uri dbo:birthPlace res:Australia . } UNION { ?uri dbo:birthPlace ?x . ?x dbo:country res:Australia . } "
        }
    },
    {
        "id": 148,
        "string": "In which UK city are the headquarters of the MI6?",
        "sparql": {
            "sparql": " PREFIX res: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { res:Secret_Intelligence_Service dbo:headquarter ?uri . ?uri dbo:country res:United_Kingdom . } "
        }
    },
    {
        "id": 149,
        "string": "Which other weapons did the designer of the Uzi develop?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Weapon . ?uri dbp:designer ?x . res:Uzi dbp:designer ?x . FILTER (?uri != res:Uzi) } "
        }
    },
    {
        "id": 150,
        "string": "Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Cuban_missile_crisis dbo:date ?x . res:Bay_of_Pigs_Invasion dbo:date ?y . FILTER (?x < ?y) } "
        }
    },
    {
        "id": 151,
        "string": "Give me all islands that belong to Japan.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Island . ?uri dbo:country res:Japan . } "
        }
    },
    {
        "id": 153,
        "string": "What is the ruling party in Lisbon?",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Lisbon dbp:leaderParty ?uri . } "
        }
    },
    {
        "id": 154,
        "string": "What are the nicknames of San Francisco?",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?string WHERE { res:San_Francisco dbp:nickname ?string . } "
        }
    },
    {
        "id": 155,
        "string": "Which Greek goddesses dwelt on Mount Olympus?",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> PREFIX yago: <http://dbpedia.org/clas/yago/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:GrekGodeses . ?uri dbp:abode res:Mount_Olympus . } "
        }
    },
    {
        "id": 156,
        "string": "When were the Hells Angels founded?",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Hells_Angels dbp:founded ?date . } "
        }
    },
    {
        "id": 157,
        "string": "Give me all Apollo 14 astronauts.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:mission res:Apollo_14 . } "
        }
    },
    {
        "id": 158,
        "string": "What is the time zone of Salt Lake City?",
        "sparql": {
            "sparql": " PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { res:Salt_Lake_City dbp:timezone ?uri . } "
        }
    },
    {
        "id": 159,
        "string": "Which U.S. states are in the same time zone as Utah?",
        "sparql": {
            "sparql": " PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX yago: <http://dbpedia.org/clas/yago/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { res:Utah dbp:timezone ?x . ?uri rdf:type yago:StatesOfTheUnitedStates . ?uri dbp:timezone ?x . FILTER (?uri != res:Utah) } "
        }
    },
    {
        "id": 160,
        "string": "Give me a list of all lakes in Denmark.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX yago: <http://dbpedia.org/clas/yago/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { { ?uri rdf:type dbo:Lake . ?uri dbo:country res:Denmark . } UNION { ?uri rdf:type yago:LakesOfDenmark . } } "
        }
    },
    {
        "id": 161,
        "string": "How many missions does the Soyuz programme have?",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT COUNT(DISTINCT ?uri)WHERE { ?uri dbp:programe res:Soyuz_programme . } "
        }
    },
    {
        "id": 162,
        "string": "Did Socrates influence Aristotle?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Socrates dbo:influenced res:Aristotle . } "
        }
    },
    {
        "id": 163,
        "string": "Give me all Danish movies.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film . ?uri dbo:country res:Denmark . } "
        }
    },
    {
        "id": 164,
        "string": "Give me all launch pads operated by NASA.",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:LaunchPad . ?uri dbo:operator res:NASA . } "
        }
    },
    {
        "id": 165,
        "string": "Which instruments does Cat Stevens play?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Cat_Stevens dbo:instrument ?uri . } "
        }
    },
    {
        "id": 166,
        "string": "Which ships were called after Benjamin Franklin?",
        "sparql": {
            "sparql": " PREFIX res: <http://dbpedia.org/resource/> PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri dbp:shipNamesake res:Benjamin_Franklin . } "
        }
    },
    {
        "id": 167,
        "string": "Who are the parents of the wife of Juan Carlos I?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Juan_Carlos_I_of_Spain dbo:spouse ?x . ?x dbo:parent ?uri . } "
        }
    },
    {
        "id": 168,
        "string": "How many employees does Google have?",
        "sparql": {
            "sparql": " PREFIX res: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?num WHERE { res:Google dbo:numberOfEmployees ?num . } "
        }
    },
    {
        "id": 169,
        "string": "Did Tesla win a nobel prize in physics?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Nikola_Tesla dbo:award res:Nobel_Prize_in_Physics . } "
        }
    },
    {
        "id": 170,
        "string": "Is Rita Wilson the wife of Tom Hanks?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> ASK WHERE { res:Tom_Hanks dbo:spouse res:Rita_Wilson . } "
        }
    },
    {
        "id": 171,
        "string": "When was the Statue of Liberty built?",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Statue_of_Liberty dbp:beginingDate ?date . } "
        }
    },
    {
        "id": 172,
        "string": "In which U.S. state is Fort Knox located?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { res:Fort_Knox dbp:location ?uri . ?uri dbo:country res:United_States . } "
        }
    },
    {
        "id": 173,
        "string": "How many children did Benjamin Franklin have?",
        "sparql": {
            "sparql": " PREFIX res: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT COUNT(DISTINCT ?uri) WHERE { res:Benjamin_Franklin dbo:child ?uri . } "
        }
    },
    {
        "id": 174,
        "string": "When did Michael Jackson die?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?date WHERE { res:Michael_Jackson dbo:deathDate ?date . } "
        }
    },
    {
        "id": 175,
        "string": "Which Chess players died in the same place they were born in?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:ChessPlayer . ?uri dbo:birthPlace ?x . ?uri dbo:deathPlace ?y . FILTER (?x = ?y) . } "
        }
    },
    {
        "id": 176,
        "string": "List the children of Margaret Thatcher.",
        "sparql": {
            "sparql": " PREFIX res: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { res:Margaret_Thatcher dbo:child ?uri . } "
        }
    },
    {
        "id": 177,
        "string": "Who was called Frank The Tank?",
        "sparql": {
            "sparql": " PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri dbp:nickname 'Frank The Tank'@en . }"
        }
    },
    {
        "id": 178,
        "string": "Was Margaret Thatcher a chemist?",
        "sparql": {
            "sparql": " PREFIX res: <http://dbpedia.org/resource/> PREFIX dbo: <http://dbpedia.org/ontology/> ASK WHERE { res:Margaret_Thatcher dbo:profession res:Chemist . } "
        }
    },
    {
        "id": 179,
        "string": "Was Marc Chagall a jew?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>ASK WHERE { res:Marc_Chagal dbp:ethnicity 'Jewish'@en .}"
        }
    },
    {
        "id": 180,
        "string": "Give me all books by William Goldman with more than 300 pages.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book . ?uri dbo:author res:William_Goldman . ?uri dbo:numberOfPages ?x . FILTER (?x > 30)}"
        }
    },
    {
        "id": 181,
        "string": "Which books by Kerouac were published by Viking Press?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book . ?uri dbo:publisher res:Viking_Pres . ?uri dbo:author res:Jack_Kerouac .}"
        }
    },
    {
        "id": 182,
        "string": "Give me a list of all American inventions.",
        "sparql": {
            "sparql": "PREFIX yago: <http://dbpedia.org/clas/yago/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:AmericanInventions .}"
        }
    },
    {
        "id": 183,
        "string": "How high is the Mount Everest?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?num WHERE { res:Mount_Everest dbo:elevation ?num.}"
        }
    },
    {
        "id": 184,
        "string": "Who created the comic Captain America?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:Captain_America dbo:creator ?uri .}"
        }
    },
    {
        "id": 185,
        "string": "How many people live in the capital of Australia?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?num WHERE { res:Australia dbo:capital ?x . ?x dbo:populationTotal ?num .}"
        }
    },
    {
        "id": 186,
        "string": "What is the largest city in Australia?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:Australia dbo:largestCity ?uri .}"
        }
    },
    {
        "id": 187,
        "string": "Who composed the music for Harold and Maude?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/>SELECT DISTINCT ?uri WHERE { res:Harold_and_Maude dbo:musicComposer ?uri .}"
        }
    },
    {
        "id": 188,
        "string": "Which films starring Clint Eastwood did he direct himself?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Clint_Eastwood . ?uri dbo:starring res:Clint_Eastwood .}"
        }
    },
    {
        "id": 189,
        "string": "In which city was the former Dutch queen Juliana buried?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { res:Juliana_of_the_Netherlands dbo:restingPlace ?uri. ?uri rdf:type dbo:Settlement .}"
        }
    },
    {
        "id": 190,
        "string": "Where is the residence of the prime minister of Spain?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:Prime_Minister_of_Spain dbp:residence ?uri .}"
        }
    },
    {
        "id": 191,
        "string": "Which U.S. state has the abbreviation MN?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX yago: <http://dbpedia.org/clas/yago/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type yago:StatesOfTheUnitedStates . ?uri dbp:postalabreviation 'MN'@en .}"
        }
    },
    {
        "id": 192,
        "string": "Show me all songs from Bruce Springsteen released between 1980 and 1990.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>PREFIX xsd: <http://w.w3.org/201/XMLSchema#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Song . ?uri dbo:artist res:Bruce_Springsteen . ?uri dbo:releaseDate ?date . FILTER (?date >= '1980-01-01'^xsd:date & ?date <= '190-12-31'^xsd:date)}"
        }
    },
    {
        "id": 193,
        "string": "Which movies did Kurosawa direct?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Film . ?uri dbo:director res:Akira_Kurosawa .}"
        }
    },
    {
        "id": 194,
        "string": "What is the founding year of the brewery that produces Pilsner Urquell?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?num WHERE { res:Pilsner_Urquel dbp:brewery ?uri . ?uri dbp:foundation ?num .}"
        }
    },
    {
        "id": 195,
        "string": "Who wrote the lyrics for the Polish national anthem?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:Poland dbo:anthem ?x . ?x dbp:author ?uri .}"
        }
    },
    {
        "id": 196,
        "string": "Give me all B-sides of the Ramones.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?string WHERE { ?x dbo:musicalArtist res:Ramones . ?x dbo:bSide ?string . }"
        }
    },
    {
        "id": 197,
        "string": "Who painted The Storm on the Sea of Galilee?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:The_Storm_on_the_Sea_of_Galile dbo:author ?uri .}"
        }
    },
    {
        "id": 198,
        "string": "Which country does the creator of Miffy come from?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:Miffy dbo:creator ?x . ?x dbo:nationality ?uri .}"
        }
    },
    {
        "id": 199,
        "string": "For which label did Elvis record his first album?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?x rdf:type dbo:Album . ?x dbo:artist res:Elvis_Presley . ?x dbo:releaseDate ?y . ?x dbo:recordLabel ?uri .}ORDER BY ASC(?y) OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 200,
        "string": "Who produces Orangina?",
        "sparql": {
            "sparql": " PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uri WHERE { ?uri dbo:product res:Orangina . }"
        }
    },
    {
        "id": 201,
        "string": "Give me all taikonauts.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Astronaut . ?uri dbo:nationality res:China .}"
        }
    },
    {
        "id": 202,
        "string": "How many languages are spoken in Colombia?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT COUNT(DISTINCT ?uri) WHERE { ?uri rdf:type dbo:Language . res:Colombia dbo:language ?uri .}"
        }
    },
    {
        "id": 203,
        "string": "Which poet wrote the most books?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri dbo:occupation res:Poet . ?x dbo:author ?uri . ?x rdf:type dbo:Book .}ORDER BY DESC(COUNT(?x)OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 204,
        "string": "How many programming languages are there?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT COUNT(DISTINCT ?uri)WHERE { ?uri rdf:type dbo:ProgrammingLanguage .}"
        }
    },
    {
        "id": 205,
        "string": "Give me all Dutch parties.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:PoliticalParty . ?uri dbo:country res:Netherlands .}"
        }
    },
    {
        "id": 206,
        "string": "When was Carlo Giuliani shot?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?dateWHERE { res:Death_of_Carlo_Giuliani dbp:dateOfDeath ?date .}"
        }
    },
    {
        "id": 207,
        "string": "Does the Isar flow into a lake?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>ASKWHERE { ?x dbo:inflow res:Isar . ?x rdf:type dbo:Lake . }"
        }
    },
    {
        "id": 208,
        "string": "Which rivers flow into a German lake?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:River . ?x dbo:inflow ?uri . ?x rdf:type dbo:Lake . ?x dbo:country res:Germany .}"
        }
    },
    {
        "id": 209,
        "string": "How heavy is Jupiter's lightest moon?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?nWHERE { ?uri dbp:sateliteOf res:Jupiter . ?uri dbo:mas ?n .}ORDER BY ASC(?n)OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 210,
        "string": "Who is the youngest Darts player?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:DartsPlayer . ?uri dbo:birthDate ?date .}ORDER BY DESC(?date)OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 211,
        "string": "Give me all animals that are extinct.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Animal . ?uri dbo:conservationStatus 'EX' .}"
        }
    },
    {
        "id": 212,
        "string": "How many pages does War and Peace have?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?nWHERE { res:War_and_Peace dbo:numberOfPages ?n .}"
        }
    },
    {
        "id": 213,
        "string": "Which ingredients do I need for carrot cake?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Carrot_cake dbo:ingredient ?uri .}"
        }
    },
    {
        "id": 214,
        "string": "What is the most frequent cause of death?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>SELECT DISTINCT ?xWHERE { ?uri dbo:deathCause ?x . }ORDER BY DESC(COUNT(DISTINCT ?uri) OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 215,
        "string": "Who has Tom Cruise been married to?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { ?uri dbo:spouse res:Tom_Cruise.}"
        }
    },
    {
        "id": 216,
        "string": "Who is the tallest player of the Atlanta Falcons?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { ?uri dbo:team res:Atlanta_Falcons . ?uri dbo:height ?h .} ORDER BY DESC(?h) OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 217,
        "string": "What is the bridge with the longest span?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Bridge . ?uri dbo:mainspan ?s . } ORDER BY DESC(?s) OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 218,
        "string": "Give me all films produced by Steven Spielberg with a budget of at least $80 million.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Film . ?uri dbo:director res:Steven_Spielberg . ?uri dbo:budget ?b . FILTER( xsd:double(?b) >= 8.0E7 )}"
        }
    },
    {
        "id": 219,
        "string": "Is Cola a beverage?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>ASK WHERE { res:Cola rdf:type dbo:Beverage .}"
        }
    },
    {
        "id": 220,
        "string": "Which actor was casted in the most movies?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Actor . ?f rdf:type dbo:Film . ?f dbo:starring ?uri .} ORDER BY DESC(COUNT(DISTINCT(?f) OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 221,
        "string": "Where was Bach born?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:Johann_Sebastian_Bach dbo:birthPlace ?uri .}"
        }
    },
    {
        "id": 222,
        "string": "Which of Tim Burton's films had the highest budget?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { ?uri dbo:director res:Tim_Burton . ?uri dbo:budget ?b .}ORDER BY ?bOFSET 0 LIMIT 1"
        }
    },
    {
        "id": 223,
        "string": "Does Abraham Lincoln's death place have a website?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/>ASKWHERE { res:Abraham_Lincoln dbo:deathPlace ?p . ?p dbp:website ?w . }"
        }
    },
    {
        "id": 224,
        "string": "Who are the four youngest MVP basketball players?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:BasketballPlayer . ?uri dbo:birthDate ?date. ?uri dbp:highlights ?h . FILTER regex(?h,'MVP')} ORDER BY DESC(?date) OFSET 0 LIMIT 4"
        }
    },
    {
        "id": 225,
        "string": "What are the top-10 action role-playing video games according to IGN?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { ?uri <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Action_role-playing_video_games> . ?uri dbp:ign ?score .} ORDER BY DESC(?score) LIMIT 10"
        }
    },
    {
        "id": 226,
        "string": "Give me all actors who were born in Berlin.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Actor . ?uri dbo:birthPlace res:Berlin .}"
        }
    },
    {
        "id": 227,
        "string": "Give me all actors who were born in Paris after 1950.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Actor . ?uri dbo:birthPlace res:Paris . ?uri dbo:birthDate ?date . FILTER ( ?date >= xsd:dateTime('1950-12-31T0:0:0Z') }"
        }
    },
    {
        "id": 228,
        "string": "What was Brazil's lowest rank in the FIFA World Ranking?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?nWHERE { res:Brazil_national_football_team dbp:fifaMin ?n .}"
        }
    },
    {
        "id": 229,
        "string": "Give me all Australian metalcore bands.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Band . ?uri dbo:genre res:Metalcore . { ?uri dbo:hometown res:Australia . } UNION { ?uri dbo:hometown ?h . ?h dbo:country res:Australia . }"
        }
    },
    {
        "id": 230,
        "string": "When is Halloween?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?dateWHERE { res:Halloween dbp:date ?date . }"
        }
    },
    {
        "id": 231,
        "string": "How many inhabitants does the largest city in Canada have?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?numWHERE { res:Canada dbo:largestCity ?city . ?city dbo:populationTotal ?num .}"
        }
    },
    {
        "id": 232,
        "string": "In which countries can you pay using the West African CFA franc?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { ?uri dbo:currency res:West_African_CFA_franc . }"
        }
    },
    {
        "id": 233,
        "string": "Give me the capitals of all countries that the Himalayas run through.",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Himalayas dbp:country ?country . ?country dbo:capital ?uri .}"
        }
    },
    {
        "id": 234,
        "string": "Who was the first to climb Mount Everest?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/>SELECT DISTINCT ?uriWHERE { res:Mount_Everest dbo:firstAscentPerson ?uri . }"
        }
    },
    {
        "id": 235,
        "string": "To which artistic movement did the painter of The Three Dancers belong?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/>SELECT DISTINCT ?uriWHERE { res:The_Three_Dancers dbo:author ?person . ?person dbo:movement ?uri .}"
        }
    },
    {
        "id": 236,
        "string": "Which pope succeeded John Paul II?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbp: <http://dbpedia.org/property/>SELECT DISTINCT ?uriWHERE { res:Pope_John_Paul_I dbp:sucesor ?uri .}"
        }
    },
    {
        "id": 237,
        "string": "What was the last movie with Alec Guinness?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Film . ?uri dbo:starring res:Alec_Guinness . ?uri dbo:releaseDate ?date . } ORDER BY DESC(?date) LIMIT 1"
        }
    },
    {
        "id": 238,
        "string": "How many James Bond movies are there?",
        "sparql": {
            "sparql": "PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>PREFIX yago: <http://dbpedia.org/clas/yago/> SELECT COUNT(DISTINCT ?uri) WHERE { ?uri rdf:type yago:JamesBondFilms . }"
        }
    },
    {
        "id": 239,
        "string": "Which actor played Chewbacca?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Chewbacca dbp:portrayer ?uri . }"
        }
    },
    {
        "id": 240,
        "string": "Give me the grandchildren of Bruce Lee.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Bruce_Le dbo:child ?child . ?child dbo:child ?uri .}"
        }
    },
    {
        "id": 241,
        "string": "Give me all writers that won the Nobel Prize in literature.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Writer . ?uri dbo:award res:Nobel_Prize_in_Literature . }"
        }
    },
    {
        "id": 242,
        "string": "What is the official color of the University of Oxford?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?stringWHERE { res:University_of_Oxford dbo:officialSchoolColour ?string . }"
        }
    },
    {
        "id": 243,
        "string": "Give me all Swedish oceanographers.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { ?uri dbo:field res:Oceanography . ?uri dbo:birthPlace res:Sweden . }"
        }
    },
    {
        "id": 244,
        "string": "How deep is Lake Placid?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>SELECT DISTINCT ?nWHERE { <http://dbpedia.org/resource/Lake_Placid_(Texas)> dbo:depth ?n . }"
        }
    },
    {
        "id": 245,
        "string": "Is James Bond married?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>ASK WHERE { res:James_Bond dbo:spouse ?uri . }"
        }
    },
    {
        "id": 246,
        "string": "Which rockets were launched from Baikonur?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Rocket . ?uri dbo:launchSite res:Baikonur_Cosmodrome .}"
        }
    },
    {
        "id": 247,
        "string": "Give me all actors called Baldwin.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX foaf: <http://xmlns.com/foaf/0.1/>SELECT DISTINCT ?uriWHERE { ?uri foaf:surname 'Baldwin'@en . { ?uri dbo:occupation res:Actor . } UNION { ?uri rdf:type dbo:Actor . }"
        }
    },
    {
        "id": 248,
        "string": "What does IYCM stand for?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { ?uri dbo:abbreviation 'IYCM' .}"
        }
    },
    {
        "id": 251,
        "string": "Which companies have more than 1 million employees?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX dbp: <http://dbpedia.org/property/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Company . { ?uri dbo:numberOfEmployees ?n . } UNION { ?uri dbp:numEmployes ?n . } FILTER ( ?n > 10 ) } "
        }
    },
    {
        "id": 252,
        "string": "Give all swimmers that were born in Moscow.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Swimmer . ?uri dbo:birthPlace res:Moscow .}"
        }
    },
    {
        "id": 253,
        "string": "Who was called Rodzilla?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri dbp:nickname \"Rodzila\"@en .}"
        }
    },
    {
        "id": 254,
        "string": "Show me the book that Muhammad Ali wrote.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Book . ?uri dbo:author res:Muhammad_Ali . }"
        }
    },
    {
        "id": 255,
        "string": "How many museums does Paris have?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Museum . ?uri dbo:location res:Paris . }"
        }
    },
    {
        "id": 256,
        "string": "Which city has the most inhabitants?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:City . ?uri dbo:populationTotal ?pop . }ORDER BY DESC(?pop)OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 257,
        "string": "Which city has the least inhabitants?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:City . ?uri dbo:populationTotal ?pop . }ORDER BY ASC(?pop)OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 258,
        "string": "Give me all the TV shows with Neil Patrick Harris.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:TelevisionShow . ?uri dbo:starring res:Neil_Patrick_Harris . }"
        }
    },
    {
        "id": 259,
        "string": "Who wrote The Hunger Games?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uriWHERE { res:The_Hunger_Games dbo:author ?uri . }"
        }
    },
    {
        "id": 260,
        "string": "Show a list of soccer clubs that play in the Bundesliga.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:SoccerClub . ?uri dbo:league res:Bundesliga . }"
        }
    },
    {
        "id": 261,
        "string": "What country is Mount Everest in?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uriWHERE { res:Mount_Everest dbo:locatedInArea ?uri . ?uri rdf:type dbo:Country .}"
        }
    },
    {
        "id": 262,
        "string": "Who is the founder of Penguin Books?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uriWHERE { res:Penguin_Books dbo:founder ?uri .}"
        }
    },
    {
        "id": 263,
        "string": "Which programming languages influenced Javascript?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:ProgrammingLanguage . ?uri dbo:influenced res:JavaScript . }"
        }
    },
    {
        "id": 264,
        "string": "Did Che Guevara have children?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>ASKWHERE { res:Che_Guevara dbo:child ?uri . }"
        }
    },
    {
        "id": 265,
        "string": "List all the musicals with music by Elton John.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Musical . ?uri dbo:musicBy res:Elton_John .}"
        }
    },
    {
        "id": 266,
        "string": "Show me all the breweries in Australia.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uri ?xWHERE { ?uri rdf:type dbo:Brewery . { ?uri dbo:location res:Australia . } UNION { ?uri dbo:location ?x . ?x dbo:country res:Australia . } }"
        }
    },
    {
        "id": 267,
        "string": "When was the Titanic completed?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?dateWHERE { res:RMS_Titanic dbo:completionDate ?date . }"
        }
    },
    {
        "id": 268,
        "string": "How much did Pulp Fiction cost?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?nWHERE { res:Pulp_Fiction dbo:budget ?n . }"
        }
    },
    {
        "id": 269,
        "string": "How many airlines are there?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT COUNT(DISTINCT ?uri)WHERE { ?uri rdf:type dbo:Airline . }"
        }
    },
    {
        "id": 270,
        "string": "Who played Agent Smith in Matrix?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Agent_Smith dbp:portrayer ?uri . }"
        }
    },
    {
        "id": 271,
        "string": "How much carbs does peanut butter have?",
        "sparql": {
            "sparql": "PREFIX dbp: <http://dbpedia.org/property/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?carbsWHERE { res:Peanut_butter dbp:carbs ?carbs .}"
        }
    },
    {
        "id": 272,
        "string": "Which book has the most pages?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Book . ?uri dbo:numberOfPages ?n .}ORDER BY DESC(?n)OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 273,
        "string": "Which bridges cross the Seine?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT DISTINCT ?uriWHERE { ?uri rdf:type dbo:Bridge . ?uri dbo:crosses res:Seine .}"
        }
    },
    {
        "id": 274,
        "string": "Who is the mayor of the capital of French Polynesia?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uri WHERE { res:French_Polynesia dbo:capital ?x . ?x dbo:mayor ?uri .}"
        }
    },
    {
        "id": 275,
        "string": "When did Dracula's creator die?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?dateWHERE { res:Count_Dracula dbo:creator ?x . ?x dbo:deathDate ?date .}"
        }
    },
    {
        "id": 276,
        "string": "What is the location of the Houses of Parliament?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { res:Palace_of_Westminster dbo:location ?uri .}"
        }
    },
    {
        "id": 277,
        "string": "Show me all English Gothic buildings in Kent.",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:Building . ?uri dbo:architecturalStyle res:English_Gothic_architecture . ?uri dbo:location res:Kent .}"
        }
    },
    {
        "id": 278,
        "string": "Who was the pope that founded the Vatican Television?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> SELECT ?uri WHERE { ?uri rdf:type dbo:Pope . res:Vatican_Television_Center dbo:foundedBy ?uri .}"
        }
    },
    {
        "id": 279,
        "string": "What airlines are part of the SkyTeam alliance?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbp: <http://dbpedia.org/property/> PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Airline . { ?uri dbp:aliance res:SkyTeam . } UNION { ?uri dbo:Alliance res:SkyTeam . }"
        }
    },
    {
        "id": 280,
        "string": "What is the total population of Melbourne, Florida?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/> SELECT ?uri WHERE { <http://dbpedia.org/resource/Melbourne,_Florida> dbo:populationTotal ?uri .}"
        }
    },
    {
        "id": 281,
        "string": "Which airports does Air China serve?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { res:Air_China dbo:targetAirport ?uri .}"
        }
    },
    {
        "id": 282,
        "string": "In which year was Rachel Stevens born?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { res:Rachel_Stevens dbo:birthYear ?uri .}"
        }
    },
    {
        "id": 283,
        "string": "Where was JFK assassinated?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uri WHERE { res:John_F._Kennedy dbo:deathPlace ?uri .}"
        }
    },
    {
        "id": 284,
        "string": "How many politicians graduated from Columbia University?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT COUNT(?uri) WHERE { ?uri dbo:profession res:Politician . ?uri dbo:almaMater res:Columbia_University .}"
        }
    },
    {
        "id": 285,
        "string": "Which scientist is known for the Manhattan Project and the Nobel Peace Prize?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri dbo:knownFor res:Manhattan_Project . ?uri rdf:type dbo:Scientist . ?uri dbo:knownFor res:Nobel_Peace_Prize .}"
        }
    },
    {
        "id": 286,
        "string": "What is the highest volcano in Africa?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>PREFIX yago: <http://dbpedia.org/clas/yago/> SELECT DISTINCT ?uri WHERE { ?uri rdf:type dbo:Volcano . ?uri dbo:locatedInArea ?area . ?area rdf:type yago:AfricanCountries . ?uri dbo:elevation ?elevation .}ORDER BY DESC(?elevation) OFSET 0 LIMIT 1"
        }
    },
    {
        "id": 287,
        "string": "Which beer originated in Ireland?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri dbp:type res:Ber . ?uri dbp:origin \"Ireland\"@en .}"
        }
    },
    {
        "id": 288,
        "string": "What are the specialities of the UNC Health Care?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>PREFIX dbp: <http://dbpedia.org/property/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { res:UNC_Health_Care dbp:speciality ?uri .}"
        }
    },
    {
        "id": 289,
        "string": "Who is the owner of Facebook?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/>PREFIX res: <http://dbpedia.org/resource/>SELECT DISTINCT ?uriWHERE { res:Facebook dbo:foundedBy ?uri .}"
        }
    },
    {
        "id": 290,
        "string": "From which region is the Melon de Bourgogne?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uriWHERE { res:Melon_de_Bourgogne dbo:wineRegion ?uri .}"
        }
    },
    {
        "id": 291,
        "string": "Who was influenced by Socrates?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uriWHERE { ?uri dbo:influencedBy res:Socrates .}"
        }
    },
    {
        "id": 292,
        "string": "Who was president of Pakistan in 1978?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uri WHERE { ?uri dbp:title res:President_of_Pakistan . ?uri dbp:years 1978 .}"
        }
    },
    {
        "id": 293,
        "string": "Give me English actors starring in Lovesick.",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX yago: <http://dbpedia.org/clas/yago/> SELECT DISTINCT ?uriWHERE { res:Lovesick dbo:starring ?uri . { ?uri dbo:birthPlace res:England . } UNION { ?uri rdf:type yago:EnglishFilmActors . }"
        }
    },
    {
        "id": 294,
        "string": "Give me all types of eating disorders.",
        "sparql": {
            "sparql": "PREFIX yago: <http://dbpedia.org/clas/yago/> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>SELECT DISTINCT ?uriWHERE { ?uri rdf:type yago:EatingDisorders .}"
        }
    },
    {
        "id": 295,
        "string": "Who was married to president Chirac?",
        "sparql": {
            "sparql": "PREFIX dbo: <http://dbpedia.org/ontology/> PREFIX res: <http://dbpedia.org/resource/> SELECT DISTINCT ?uriWHERE { res:Jacques_Chirac dbo:spouse ?uri .}"
        }
    },
    {
        "id": 296,
        "string": "What is the largest metropolitan area in Washington state?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbp: <http://dbpedia.org/property/> SELECT DISTINCT ?uriWHERE { <http://dbpedia.org/resource/Washington_(state)> dbp:largestmetro ?uri .}"
        }
    },
    {
        "id": 297,
        "string": "Where in France is sparkling wine produced?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uriWHERE { ?uri dbo:wineProduced res:Sparkling_wine . ?uri dbo:location res:France .}"
        }
    },
    {
        "id": 298,
        "string": "Where did Hillel Slovak die?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uriWHERE { res:Hillel_Slovak dbo:deathPlace ?uri .}"
        }
    },
    {
        "id": 299,
        "string": "What is the timezone in San Pedro de Atacama?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/timezone/> SELECT DISTINCT ?uriWHERE { res:San_Pedro_de_Atacama dbo:timezone ?uri .}"
        }
    },
    {
        "id": 300,
        "string": "In which city does the Chile Route 68 end?",
        "sparql": {
            "sparql": "PREFIX res: <http://dbpedia.org/resource/>PREFIX dbo: <http://dbpedia.org/ontology/> SELECT DISTINCT ?uriWHERE { res:Chile_Route_68 dbo:routeEnd ?uri .}"
        }
    }
]
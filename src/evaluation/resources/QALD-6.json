[
  {
    "id": 1,
    "string": "Give me all cosmonauts.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut> . { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Russia> . } UNION { ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Soviet_Union> . } } "
    }
  },
  {
    "id": 2,
    "string": "Give me the birthdays of all actors of the television show Charmed.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Charmed> <http://dbpedia.org/ontology/starring> ?actor .  ?actor <http://dbpedia.org/ontology/birthDate> ?date . } "
    }
  },
  {
    "id": 3,
    "string": "Who is the daughter of Robert Kennedy married to?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Robert_F._Kennedy> <http://dbpedia.org/ontology/child> ?child .  ?child <http://dbpedia.org/ontology/spouse> ?uri . } "
    }
  },
  {
    "id": 4,
    "string": "Which river does the Brooklyn Bridge cross?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Brooklyn_Bridge> <http://dbpedia.org/ontology/crosses> ?uri . } "
    }
  },
  {
    "id": 5,
    "string": "How many countries are there in Europe?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EuropeanCountries> . } "
    }
  },
  {
    "id": 6,
    "string": "In which city did John F. Kennedy die?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/ontology/deathPlace> ?uri .  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City> . } "
    }
  },
  {
    "id": 7,
    "string": "Was the wife of president Lincoln called Mary?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Abraham_Lincoln> <http://dbpedia.org/ontology/spouse> ?spouse .  ?spouse <http://www.w3.org/2000/01/rdf-schema#label> ?name .  FILTER(regex(?name,'Mary')) } "
    }
  },
  {
    "id": 8,
    "string": "Which states of Germany are governed by the Social Democratic Party?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/StatesOfGermany> .  { ?uri <http://dbpedia.org/ontology/leaderParty> <http://dbpedia.org/resource/Social_Democratic_Party_of_Germany> . } UNION  { ?uri <http://dbpedia.org/property/rulingParty> 'SPD'@en . } } "
    }
  },
  {
    "id": 9,
    "string": "In which U.S. state is Mount McKinley located?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> .  <http://dbpedia.org/resource/Mount_McKinley> <http://dbpedia.org/ontology/locatedInArea> ?uri . } "
    }
  },
  {
    "id": 10,
    "string": "In which country does the Ganges start?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Ganges> <http://dbpedia.org/property/sourceCountry> ?l . ?uri <http://www.w3.org/2000/01/rdf-schema#label> ?l . ?uri rdf:type <http://dbpedia.org/ontology/Country> . }"
    }
  },
  {
    "id": 11,
    "string": "Which countries have more than ten caves?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .  ?cave <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cave> . { ?cave <http://dbpedia.org/ontology/location> ?uri . } UNION { ?cave <http://dbpedia.org/ontology/location> ?loc .  ?loc <http://dbpedia.org/ontology/country> ?uri . } } GROUP BY ?uri HAVING(COUNT(?cave) > 10) "
    }
  },
  {
    "id": 12,
    "string": "Is proinsulin a protein?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Proinsulin> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Protein> . } "
    }
  },
  {
    "id": 13,
    "string": "Are tree frogs a type of amphibian?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Hylidae> <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Amphibian> . } "
    }
  },
  {
    "id": 14,
    "string": "How tall is Amazon Eve?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?height WHERE {  <http://dbpedia.org/resource/Amazon_Eve> <http://dbpedia.org/ontology/height> ?height . } "
    }
  },
  {
    "id": 15,
    "string": "Who created Goofy?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Goofy> <http://dbpedia.org/ontology/creator> ?uri . } "
    }
  },
  {
    "id": 16,
    "string": "Give me the capitals of all countries in Africa.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?states <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/AfricanCountries> .  ?states <http://dbpedia.org/ontology/capital> ?uri . } "
    }
  },
  {
    "id": 17,
    "string": "Give me all cities in New Jersey with more than 100000 inhabitants.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City> .  ?uri <http://dbpedia.org/ontology/isPartOf> <http://dbpedia.org/resource/New_Jersey> .  ?uri <http://dbpedia.org/ontology/populationTotal> ?inhabitants .  FILTER (?inhabitants > 100000) . } "
    }
  },
  {
    "id": 18,
    "string": "Which museum exhibits The Scream by Munch?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Scream> <http://dbpedia.org/ontology/museum> ?uri . } "
    }
  },
  {
    "id": 19,
    "string": "Is Egypts largest city also its capital?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Egypt> <http://dbpedia.org/ontology/largestCity> ?large .  <http://dbpedia.org/resource/Egypt> <http://dbpedia.org/ontology/capital> ?capital .  FILTER (?large = ?capital) } "
    }
  },
  {
    "id": 20,
    "string": "How many employees does IBM have?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?number WHERE {  <http://dbpedia.org/resource/IBM> <http://dbpedia.org/ontology/numberOfEmployees> ?number . } "
    }
  },
  {
    "id": 21,
    "string": "Which states border Illinois?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Illinois> <http://dbpedia.org/property/borderingstates> ?uri . } "
    }
  },
  {
    "id": 22,
    "string": "In which country is the Limerick Lake?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Limerick_Lake> <http://dbpedia.org/ontology/country> ?uri . } "
    }
  },
  {
    "id": 23,
    "string": "Which television shows were created by John Cleese?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .  ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/John_Cleese> . } "
    }
  },
  {
    "id": 24,
    "string": "Which mountain is the highest after the Annapurna?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Annapurna> <http://dbpedia.org/ontology/elevation> ?elevation .  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> .  ?uri <http://dbpedia.org/ontology/elevation> ?otherelevation .  FILTER (?otherelevation < ?elevation) . } ORDER BY DESC(?otherelevation) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 25,
    "string": "In which films directed by Garry Marshall was Julia Roberts starring?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> .  ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Garry_Marshall> . } "
    }
  },
  {
    "id": 26,
    "string": "Which bridges are of the same type as the Manhattan Bridge?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge> .  ?uri <http://dbpedia.org/property/design> ?design .  <http://dbpedia.org/resource/Manhattan_Bridge> <http://dbpedia.org/property/design> ?mdesign .  FILTER (?design = ?mdesign && ?uri != <http://dbpedia.org/resource/Manhattan_Bridge>) .} "
    }
  },
  {
    "id": 27,
    "string": "Was U.S. president Jackson involved in a war?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Andrew_Jackson> <http://dbpedia.org/ontology/battle> ?battle . } "
    }
  },
  {
    "id": 28,
    "string": "Give me all communist countries.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?uri <http://dbpedia.org/property/ideology> <http://dbpedia.org/resource/Communism> . }"
    }
  },
  {
    "id": 29,
    "string": "Which awards did Douglas Hofstadter win?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Douglas_Hofstadter> <http://dbpedia.org/ontology/award> ?uri . } "
    }
  },
  {
    "id": 30,
    "string": "Which U.S. state has the highest population density?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> .  ?uri <http://dbpedia.org/property/densityrank> ?rank . } ORDER BY ASC(?rank) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 31,
    "string": "What is the currency of the Czech Republic?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Czech_Republic> <http://dbpedia.org/ontology/currency> ?uri . } "
    }
  },
  {
    "id": 32,
    "string": "Which countries adopted the Euro?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .  { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Euro> . }  UNION  { ?uri <http://dbpedia.org/property/currencyCode> 'EUR'@en . } } "
    }
  },
  {
    "id": 33,
    "string": "What is the area code of Berlin?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?string WHERE {  <http://dbpedia.org/resource/Berlin> <http://dbpedia.org/ontology/areaCode> ?string . } "
    }
  },
  {
    "id": 34,
    "string": "Which countries have more than two official languages?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .  ?uri <http://dbpedia.org/ontology/officialLanguage> ?language . } GROUP BY ?uri HAVING (COUNT(?language) > 2) "
    }
  },
  {
    "id": 35,
    "string": "Who is the owner of Rolls-Royce?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Rolls-Royce_Motors> <http://dbpedia.org/ontology/owner> ?uri . } "
    }
  },
  {
    "id": 36,
    "string": "Through which countries does the Yenisei river flow?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Yenisei_River> <http://dbpedia.org/ontology/country> ?uri . } "
    }
  },
  {
    "id": 37,
    "string": "When did Latvia join the EU?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Latvia> <http://dbpedia.org/property/accessioneudate> ?date . } "
    }
  },
  {
    "id": 38,
    "string": "Which politicians were married to a German?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .  ?uri <http://dbpedia.org/ontology/spouse> ?spouse . { ?spouse <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> . } UNION { ?spouse <http://dbpedia.org/ontology/birthPlace> ?p .  ?p <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> . } } "
    }
  },
  {
    "id": 39,
    "string": "When was the Battle of Gettysburg?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Battle_of_Gettysburg> <http://dbpedia.org/ontology/date> ?date . } "
    }
  },
  {
    "id": 40,
    "string": "What is the highest mountain in Australia?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> .  ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Australia> .  ?uri <http://dbpedia.org/ontology/elevation> ?elevation . } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 41,
    "string": "Give me all soccer clubs in Spain.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .  { ?uri <http://dbpedia.org/ontology/ground> <http://dbpedia.org/resource/Spain> . }  UNION  { ?uri <http://dbpedia.org/property/ground> ?ground .  FILTER (regex(?ground,'Spain')) } } "
    }
  },
  {
    "id": 42,
    "string": "What is the official language of Suriname?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Suriname> <http://dbpedia.org/ontology/officialLanguage> ?uri . } "
    }
  },
  {
    "id": 43,
    "string": "Who is the mayor of Tel Aviv?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Tel_Aviv> <http://dbpedia.org/ontology/leaderName> ?uri . } "
    }
  },
  {
    "id": 44,
    "string": "Who designed the Brooklyn Bridge?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Brooklyn_Bridge> <http://dbpedia.org/ontology/architect> ?uri . } "
    }
  },
  {
    "id": 45,
    "string": "Which telecommunications organizations are located in Belgium?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> . { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Telecommunication> . } UNION { ?uri <http://dbpedia.org/property/industry> ?industry .  FILTER (regex(?industry,'Telecommunications')) . } { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Belgium> . } UNION { ?uri <http://dbpedia.org/property/locationCountry> 'Belgium'@en . } } "
    }
  },
  {
    "id": 46,
    "string": "Is Frank Herbert still alive?",
    "sparql": {
      "sparql": "ASK WHERE {  OPTIONAL { <http://dbpedia.org/resource/Frank_Herbert> <http://dbpedia.org/ontology/deathDate> ?date . }  FILTER (!BOUND(?date)) } "
    }
  },
  {
    "id": 47,
    "string": "What is the highest place of the Urals?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Ural_Mountains> <http://dbpedia.org/property/highest> ?uri . } "
    }
  },
  {
    "id": 48,
    "string": "Who is the editor of Forbes?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Forbes> <http://dbpedia.org/ontology/editor> ?uri . } "
    }
  },
  {
    "id": 49,
    "string": "Give me all companies in the advertising industry.",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company> . { ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Advertising> } UNION { ?uri <http://dbpedia.org/ontology/industry> ?industry .  FILTER regex(?industry,'advertising','i') . } } "
    }
  },
  {
    "id": 50,
    "string": "What did Bruce Carver die from?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Bruce_Carver> <http://dbpedia.org/ontology/deathCause> ?uri . } "
    }
  },
  {
    "id": 51,
    "string": "Give me all libraries established earlier than 1400.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Library> .  ?uri <http://dbpedia.org/property/established> ?year .  FILTER (?year < 1400) } "
    }
  },
  {
    "id": 52,
    "string": "Which presidents were born in 1945?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President> .  ?uri <http://dbpedia.org/ontology/birthDate> ?date .  FILTER regex(?date, '^1945') . } "
    }
  },
  {
    "id": 53,
    "string": "Give me all federal chancellors of Germany.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .  { ?uri <http://dbpedia.org/ontology/office> 'Chancellor of Germany' . }  UNION  { ?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Chancellor_of_Germany> . } } "
    }
  },
  {
    "id": 54,
    "string": "Who was the wife of U.S. president Lincoln?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Abraham_Lincoln> <http://dbpedia.org/ontology/spouse> ?uri. } "
    }
  },
  {
    "id": 55,
    "string": "Who developed the video game World of Warcraft?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/World_of_Warcraft> <http://dbpedia.org/ontology/developer> ?uri . } "
    }
  },
  {
    "id": 56,
    "string": "What is the official website of Tom Cruise?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?string WHERE {  <http://dbpedia.org/resource/Tom_Cruise> <http://dbpedia.org/property/website> ?string . } "
    }
  },
  {
    "id": 57,
    "string": "List all episodes of the first season of the HBO television series The Sopranos.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/The_Sopranos> .  ?uri <http://dbpedia.org/ontology/seasonNumber> 1 . } "
    }
  },
  {
    "id": 58,
    "string": "Who produced the most films?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?film <http://dbpedia.org/ontology/producer> ?uri . } ORDER BY DESC(COUNT(?film)) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 59,
    "string": "Give me all people with first name Jimmy.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> foaf:Person .  ?uri foaf:givenName 'Jimmy'@en . } "
    }
  },
  {
    "id": 60,
    "string": "Is there a video game called Battle Chess?",
    "sparql": {
      "sparql": "ASK WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame> .  ?uri <http://www.w3.org/2000/01/rdf-schema#label> 'Battle Chess'@en . } "
    }
  },
  {
    "id": 61,
    "string": "Which mountains are higher than the Nanga Parbat?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Nanga_Parbat> <http://dbpedia.org/ontology/elevation> ?elevation .  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> . { ?uri <http://dbpedia.org/ontology/elevation> ?otherelevation . } UNION { ?uri <http://dbpedia.org/property/elevationM> ?otherelevation . }  FILTER (?otherelevation > ?elevation) . } "
    }
  },
  {
    "id": 62,
    "string": "Who created Wikipedia?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Wikipedia> <http://dbpedia.org/ontology/author> ?uri . } "
    }
  },
  {
    "id": 63,
    "string": "Give me all actors starring in Last Action Hero.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Last_Action_Hero> <http://dbpedia.org/ontology/starring> ?uri . } "
    }
  },
  {
    "id": 64,
    "string": "Which software has been developed by organizations founded in California?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software> .  ?company <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company> .  ?uri <http://dbpedia.org/ontology/developer> ?company .  ?company <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/California> . } "
    }
  },
  {
    "id": 65,
    "string": "Which companies work in the aerospace industry as well as in medicine?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company> .  ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Aerospace> .  ?uri <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Medicine> . } "
    }
  },
  {
    "id": 66,
    "string": "Is Christian Bale starring in Velvet Goldmine?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Velvet_Goldmine> <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Christian_Bale> . } "
    }
  },
  {
    "id": 67,
    "string": "Give me the websites of companies with more than 500000 employees.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?string WHERE {  ?c <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company> . { ?c <http://dbpedia.org/ontology/numberOfEmployees> ?employees . } UNION { ?c <http://dbpedia.org/property/numEmployees> ?employees . }  FILTER( xsd:integer(?employees) > 500000 ) .  ?c <http://dbpedia.org/property/homepage> ?string . } "
    }
  },
  {
    "id": 68,
    "string": "Which actors were born in Germany?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Germany> . } UNION { ?uri <http://dbpedia.org/ontology/birthPlace> ?place .  ?place <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> . } } "
    }
  },
  {
    "id": 69,
    "string": "Which caves have more than 3 entrances?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cave> .  ?uri <http://dbpedia.org/property/entranceCount> ?entrance .  FILTER (?entrance > 3) . } "
    }
  },
  {
    "id": 70,
    "string": "Give me all films produced by Hal Roach.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> . } "
    }
  },
  {
    "id": 71,
    "string": "Give me all video games published by Mean Hamster Software.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame> . ?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Mean_Hamster_Software> . } "
    }
  },
  {
    "id": 72,
    "string": "Which languages are spoken in Estonia?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/spokenIn> <http://dbpedia.org/resource/Estonia> . } "
    }
  },
  {
    "id": 73,
    "string": "How many Aldi stores are there?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?number WHERE {  <http://dbpedia.org/resource/Aldi> <http://dbpedia.org/ontology/numberOfLocations> ?number . } "
    }
  },
  {
    "id": 74,
    "string": "Which capitals in Europe were host cities of the summer olympic games?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/CapitalsInEurope> .  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/HostCitiesOfTheSummerOlympicGames> . } "
    }
  },
  {
    "id": 75,
    "string": "Who was the 16th president of the United States?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/office> 'President of the United States'^^<http://www.w3.org/2001/XMLSchema#string> .  ?uri <http://dbpedia.org/ontology/orderInOffice> '16th'^^<http://www.w3.org/2001/XMLSchema#string> . } "
    }
  },
  {
    "id": 76,
    "string": "How many films did Hal Roach produce?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Hal_Roach> . } "
    }
  },
  {
    "id": 77,
    "string": "Which music albums contain the song Last Christmas?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?single <http://dbpedia.org/ontology/album> ?uri .  ?single <http://www.w3.org/2000/01/rdf-schema#label> 'Last Christmas'@en . } "
    }
  },
  {
    "id": 78,
    "string": "Give me all books written by Danielle Steel.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> .  ?uri <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Danielle_Steel> . } "
    }
  },
  {
    "id": 79,
    "string": "Which airports are located in California, USA?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airport> . { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/California> . } UNION { ?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/California> . } UNION { ?uri <http://dbpedia.org/ontology/city> ?city .  ?city <http://dbpedia.org/ontology/isPartOf> <http://dbpedia.org/resource/California> . } UNION { ?uri <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/California> . } } "
    }
  },
  {
    "id": 80,
    "string": "Give me all Canadian Grunge record labels.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel> .  ?uri <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Grunge> .  ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Canada> . } "
    }
  },
  {
    "id": 81,
    "string": "Which country has the most official languages?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .  ?uri <http://dbpedia.org/property/officialLanguages> ?language . } ORDER BY DESC(COUNT(?language)) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 82,
    "string": "In which programming language is GIMP written?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/GIMP> <http://dbpedia.org/ontology/programmingLanguage> ?uri . } "
    }
  },
  {
    "id": 83,
    "string": "Who produced films starring Natalie Portman?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?film <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Natalie_Portman> .  ?film <http://dbpedia.org/ontology/producer> ?uri . } "
    }
  },
  {
    "id": 84,
    "string": "Give me all movies with Tom Cruise.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Tom_Cruise> . } "
    }
  },
  {
    "id": 85,
    "string": "In which films did Julia Roberts as well as Richard Gere play?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Julia_Roberts> .  ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Richard_Gere> . } "
    }
  },
  {
    "id": 86,
    "string": "Give me all female given names.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GivenName> .  ?uri <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Female> . } "
    }
  },
  {
    "id": 87,
    "string": "Who wrote the book The Pillars of the Earth?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/The_Pillars_of_the_Earth> <http://dbpedia.org/ontology/author> ?uri . } "
    }
  },
  {
    "id": 88,
    "string": "How many films did Leonardo DiCaprio star in?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Leonardo_DiCaprio> . } "
    }
  },
  {
    "id": 89,
    "string": "Give me all soccer clubs in the Premier League.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .  ?uri <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Premier_League> . } "
    }
  },
  {
    "id": 90,
    "string": "When was Jack Wolfskin founded?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?year WHERE {  <http://dbpedia.org/resource/Jack_Wolfskin> <http://dbpedia.org/ontology/foundingYear> ?year . } "
    }
  },
  {
    "id": 91,
    "string": "Which organizations were founded in 1930?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation> . { ?uri <http://dbpedia.org/ontology/formationYear> ?date . } UNION { ?uri <http://dbpedia.org/ontology/foundingYear> ?date. } FILTER regex(?date,'^1930') . } "
    }
  },
  {
    "id": 92,
    "string": "What is the highest mountain?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> .  ?uri <http://dbpedia.org/ontology/elevation> ?elevation . } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 93,
    "string": "Was Natalie Portman born in the United States?",
    "sparql": {
      "sparql": "ASK WHERE {  { <http://dbpedia.org/resource/Natalie_Portman> <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_States> . }  UNION  { <http://dbpedia.org/resource/Natalie_Portman> <http://dbpedia.org/ontology/birthPlace> ?city .  ?city <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . } } "
    }
  },
  {
    "id": 94,
    "string": "Which budget did the first movie of Zdenek Sverak have?",
    "sparql": {}
  },
  {
    "id": 95,
    "string": "How many big fires struck Paris during the Middle Ages?",
    "sparql": {}
  },
  {
    "id": 96,
    "string": "Is Pamela Anderson a vegan?",
    "sparql": {}
  },
  {
    "id": 97,
    "string": "How often was Michael Jordan divorced?",
    "sparql": {}
  },
  {
    "id": 98,
    "string": "What is the most beautiful painting?",
    "sparql": {}
  },
  {
    "id": 99,
    "string": "Give me all animal species that live in the Amazon rainforest.",
    "sparql": {}
  },
  {
    "id": 100,
    "string": "When is the movie Worst Case Scenario going to be in cinemas in the Netherlands?",
    "sparql": {}
  },
  {
    "id": 101,
    "string": "Which German cities have more than 250000 inhabitants?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City> . } UNION { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town> . }  ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> .  ?uri <http://dbpedia.org/ontology/populationTotal> ?population .  FILTER ( ?population > 250000 ) } "
    }
  },
  {
    "id": 102,
    "string": "Who was John F. Kennedy's vice president?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/ontology/vicePresident> ?uri . } "
    }
  },
  {
    "id": 103,
    "string": "Who is the mayor of Tel Aviv?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Tel_Aviv> <http://dbpedia.org/ontology/leaderName> ?uri . } "
    }
  },
  {
    "id": 104,
    "string": "How many students does the Free University in Amsterdam have?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?num WHERE {  <http://dbpedia.org/resource/VU_University_Amsterdam> <http://dbpedia.org/ontology/numberOfStudents> ?num . } "
    }
  },
  {
    "id": 105,
    "string": "What is the second highest mountain on Earth?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> .  ?uri <http://dbpedia.org/ontology/elevation> ?elevation . } ORDER BY DESC(?elevation) OFFSET 1 LIMIT 1 "
    }
  },
  {
    "id": 106,
    "string": "Give me all professional skateboarders from Sweden.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Skateboarding> . { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sweden> . } UNION { ?uri <http://dbpedia.org/ontology/birthPlace> ?place .  ?place <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> . } } "
    }
  },
  {
    "id": 107,
    "string": "When was Alberta admitted as province?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Alberta> <http://dbpedia.org/property/admittancedate> ?date . } "
    }
  },
  {
    "id": 108,
    "string": "To which countries does the Himalayan mountain system extend?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/property/country> ?uri . } "
    }
  },
  {
    "id": 109,
    "string": "Give me a list of all bandleaders that play trumpet.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Bandleader> .  ?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Trumpet> . } "
    }
  },
  {
    "id": 110,
    "string": "What is the total amount of men and women serving in the FDNY?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?num WHERE {  <http://dbpedia.org/resource/New_York_City_Fire_Department> <http://dbpedia.org/property/employees> ?num . } "
    }
  },
  {
    "id": 111,
    "string": "Who is the Formula 1 race driver with the most races?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer> .  ?uri <http://dbpedia.org/ontology/races> ?x . } ORDER BY DESC(?x) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 112,
    "string": "Give me all world heritage sites designated within the past two years.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WorldHeritageSite> . { ?uri <http://dbpedia.org/property/year> '2013'^^xsd:integer . } UNION { ?uri <http://dbpedia.org/property/year> '2014'^^xsd:integer . } } "
    }
  },
  {
    "id": 113,
    "string": "Who is the youngest player in the Premier League?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/team> ?x .  ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Premier_League> .  ?uri <http://dbpedia.org/ontology/birthDate> ?y . } ORDER BY DESC(?y) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 114,
    "string": "Give me all members of Prodigy.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/The_Prodigy> <http://dbpedia.org/ontology/bandMember> ?uri . } "
    }
  },
  {
    "id": 115,
    "string": "What is the longest river?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River> . { ?uri <http://dbpedia.org/ontology/length> ?l . } UNION { ?uri <http://dbpedia.org/property/length> ?l . } } ORDER BY DESC(?l) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 116,
    "string": "Does Breaking Bad have more episodes than Game of Thrones?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Breaking_Bad> <http://dbpedia.org/ontology/numberOfEpisodes> ?x .  <http://dbpedia.org/resource/Game_of_Thrones> <http://dbpedia.org/ontology/numberOfEpisodes> ?y .  FILTER (?x > ?y) } "
    }
  },
  {
    "id": 117,
    "string": "Give me all cars that are produced in Germany.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile> . { ?uri <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Germany> . } UNION { ?uri <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Germany> . } UNION { { ?uri <http://dbpedia.org/ontology/manufacturer> ?x . }  UNION  { ?uri <http://dbpedia.org/property/manufacturer> ?x . }  { ?x <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Germany> . }  UNION  { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Germany> . } } } "
    }
  },
  {
    "id": 118,
    "string": "What were the main discoveries of the Mars rover Curiosity?",
    "sparql": {}
  },
  {
    "id": 119,
    "string": "Give me all people that were born in Vienna and died in Berlin.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Vienna> .  ?uri <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Berlin> . } "
    }
  },
  {
    "id": 120,
    "string": "How tall is Michael Jordan?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?num WHERE {  <http://dbpedia.org/resource/Michael_Jordan> <http://dbpedia.org/ontology/height> ?num . } "
    }
  },
  {
    "id": 121,
    "string": "What is the capital of Canada?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/capital> ?uri . } "
    }
  },
  {
    "id": 122,
    "string": "Who is the governor of Wyoming?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Wyoming> <http://dbpedia.org/property/governor> ?uri . } "
    }
  },
  {
    "id": 123,
    "string": "Do Prince Harry and Prince William have the same parents?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Prince_William,_Duke_of_Cambridge> <http://dbpedia.org/ontology/parent> ?x .  <http://dbpedia.org/resource/Prince_Harry> <http://dbpedia.org/ontology/parent> ?x . } "
    }
  },
  {
    "id": 124,
    "string": "Who was the father of Queen Elizabeth II?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Elizabeth_II> <http://dbpedia.org/property/father> ?uri . } "
    }
  },
  {
    "id": 125,
    "string": "Which U.S. state has been admitted latest?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> .  ?uri <http://dbpedia.org/property/admittancedate> ?x . } ORDER BY DESC(?x) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 126,
    "string": "How many languages are spoken in Turkmenistan?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?x) as ?c) WHERE {  <http://dbpedia.org/resource/Turkmenistan> <http://dbpedia.org/ontology/language> ?x . } "
    }
  },
  {
    "id": 127,
    "string": "Butch Otter is the governor of which U.S. state?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> .  ?uri <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Butch_Otter> . }"
    }
  },
  {
    "id": 128,
    "string": "Give me all movies directed by Francis Ford Coppola.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Francis_Ford_Coppola> . } "
    }
  },
  {
    "id": 129,
    "string": "Give me all actors starring in movies directed by William Shatner.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?x <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/William_Shatner> .  ?x <http://dbpedia.org/ontology/starring> ?uri . } "
    }
  },
  {
    "id": 130,
    "string": "What is the birth name of Angela Merkel?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?string WHERE {  <http://dbpedia.org/resource/Angela_Merkel> <http://dbpedia.org/ontology/birthName> ?string . } "
    }
  },
  {
    "id": 131,
    "string": "Give me all Methodist politicians.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> .  ?uri <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Methodism> . } "
    }
  },
  {
    "id": 132,
    "string": "How often did Jane Fonda marry?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  <http://dbpedia.org/resource/Jane_Fonda> <http://dbpedia.org/ontology/spouse> ?uri . } "
    }
  },
  {
    "id": 133,
    "string": "Give me all Australian nonprofit organizations.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> . { ?uri <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Australia> . } UNION { ?uri <http://dbpedia.org/ontology/location> ?x .  ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> . } } "
    }
  },
  {
    "id": 134,
    "string": "In which military conflicts did Lawrence of Arabia participate?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/T._E._Lawrence> <http://dbpedia.org/ontology/battle> ?uri . } "
    }
  },
  {
    "id": 135,
    "string": "Who developed Minecraft?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Minecraft> <http://dbpedia.org/ontology/developer> ?uri . } "
    }
  },
  {
    "id": 136,
    "string": "What is the melting point of copper?",
    "sparql": {}
  },
  {
    "id": 137,
    "string": "Give me all sister cities of Brno.",
    "sparql": {}
  },
  {
    "id": 138,
    "string": "How many inhabitants does Maribor have?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?num WHERE {  <http://dbpedia.org/resource/Maribor> <http://dbpedia.org/ontology/populationTotal> ?num . } "
    }
  },
  {
    "id": 139,
    "string": "Give me all companies in Munich.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company> . { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Munich> . } UNION { ?uri <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Munich> . } UNION { ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Munich> . } } "
    }
  },
  {
    "id": 140,
    "string": "List all games by GMT.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/GMT_Games> . } "
    }
  },
  {
    "id": 141,
    "string": "Who founded Intel?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Intel> <http://dbpedia.org/ontology/foundedBy> ?uri . } "
    }
  },
  {
    "id": 142,
    "string": "Who is the husband of Amanda Palmer?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Amanda_Palmer> <http://dbpedia.org/property/spouse> ?uri . } "
    }
  },
  {
    "id": 143,
    "string": "Give me all breeds of the German Shepherd dog.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/property/breed> <http://dbpedia.org/resource/German_Shepherd> . } "
    }
  },
  {
    "id": 144,
    "string": "Which cities does the Weser flow through?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Weser> <http://dbpedia.org/ontology/city> ?uri . } "
    }
  },
  {
    "id": 145,
    "string": "Which countries are connected by the Rhine?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Rhine> <http://dbpedia.org/property/country> ?string .  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> .  ?uri <http://www.w3.org/2000/01/rdf-schema#label> ?string . } "
    }
  },
  {
    "id": 146,
    "string": "Which professional surfers were born in Australia?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Surfing> . { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Australia> . } UNION { ?uri <http://dbpedia.org/ontology/birthPlace> ?x .  ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> . } } "
    }
  },
  {
    "id": 147,
    "string": "What is the average temperature on Hawaii?",
    "sparql": {}
  },
  {
    "id": 148,
    "string": "In which UK city are the headquarters of the MI6?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Secret_Intelligence_Service> <http://dbpedia.org/ontology/headquarter> ?uri .  ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_Kingdom> . } "
    }
  },
  {
    "id": 149,
    "string": "Which weapons did Heckler & Koch develop?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Weapon> . ?uri <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Heckler_&_Koch> .  }"
    }
  },
  {
    "id": 150,
    "string": "Was the Cuban Missile Crisis earlier than the Bay of Pigs Invasion?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Cuban_Missile_Crisis> <http://dbpedia.org/ontology/date> ?x .  <http://dbpedia.org/resource/Bay_of_Pigs_Invasion> <http://dbpedia.org/ontology/date> ?y .  FILTER (?x < ?y) } "
    }
  },
  {
    "id": 151,
    "string": "Give me all islands that belong to Japan.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island> .  ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Japan> . } "
    }
  },
  {
    "id": 152,
    "string": "Who invented the zipper?",
    "sparql": {}
  },
  {
    "id": 153,
    "string": "What is the ruling party in Lisbon?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Lisbon> <http://dbpedia.org/property/leaderParty> ?uri . } "
    }
  },
  {
    "id": 154,
    "string": "What are the nicknames of San Francisco?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?string WHERE {  <http://dbpedia.org/resource/San_Francisco> <http://dbpedia.org/property/nickname> ?string . } "
    }
  },
  {
    "id": 155,
    "string": "Which Greek goddesses dwelt on Mount Olympus?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/GreekGoddesses> .  ?uri <http://dbpedia.org/property/abode> <http://dbpedia.org/resource/Mount_Olympus> . } "
    }
  },
  {
    "id": 156,
    "string": "When were the Hells Angels founded?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Hells_Angels> <http://dbpedia.org/property/founded> ?date . } "
    }
  },
  {
    "id": 157,
    "string": "Give me all Apollo 14 astronauts.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/mission> <http://dbpedia.org/resource/Apollo_14> . } "
    }
  },
  {
    "id": 158,
    "string": "What is the time zone of Salt Lake City?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Salt_Lake_City> <http://dbpedia.org/property/timezone> ?uri . } "
    }
  },
  {
    "id": 159,
    "string": "Which U.S. states are in the same time zone as Utah?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Utah> <http://dbpedia.org/property/timezone> ?x .  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> .  ?uri <http://dbpedia.org/property/timezone> ?x .  FILTER (?uri != <http://dbpedia.org/resource/Utah>) } "
    }
  },
  {
    "id": 160,
    "string": "Give me a list of all lakes in Denmark.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lake> .  ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> . }  UNION  { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/LakesOfDenmark> . } } "
    }
  },
  {
    "id": 161,
    "string": "How many missions does the Soyuz programme have?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://dbpedia.org/property/programme> <http://dbpedia.org/resource/Soyuz_programme> . } "
    }
  },
  {
    "id": 162,
    "string": "Did Socrates influence Aristotle?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Socrates> <http://dbpedia.org/ontology/influenced> <http://dbpedia.org/resource/Aristotle> . } "
    }
  },
  {
    "id": 163,
    "string": "Give me all Danish movies.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Denmark> . } "
    }
  },
  {
    "id": 164,
    "string": "Give me all launch pads operated by NASA.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/LaunchPad> .  ?uri <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/NASA> . } "
    }
  },
  {
    "id": 165,
    "string": "Which instruments does Cat Stevens play?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Cat_Stevens> <http://dbpedia.org/ontology/instrument> ?uri . } "
    }
  },
  {
    "id": 166,
    "string": "Which ships were called after Benjamin Franklin?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/property/shipNamesake> <http://dbpedia.org/resource/Benjamin_Franklin> . } "
    }
  },
  {
    "id": 167,
    "string": "Who are the parents of the wife of Juan Carlos I?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Juan_Carlos_I_of_Spain> <http://dbpedia.org/ontology/spouse> ?x .  ?x <http://dbpedia.org/ontology/parent> ?uri . } "
    }
  },
  {
    "id": 168,
    "string": "How many employees does Google have?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?num WHERE {  <http://dbpedia.org/resource/Google> <http://dbpedia.org/ontology/numberOfEmployees> ?num . } "
    }
  },
  {
    "id": 169,
    "string": "Did Tesla win a nobel prize in physics?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Nikola_Tesla> <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> . } "
    }
  },
  {
    "id": 170,
    "string": "Is Rita Wilson the wife of Tom Hanks?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Tom_Hanks> <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Rita_Wilson> . } "
    }
  },
  {
    "id": 171,
    "string": "When was the Statue of Liberty built?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Statue_of_Liberty> <http://dbpedia.org/property/beginningDate> ?date . } "
    }
  },
  {
    "id": 172,
    "string": "Where is Fort Knox located?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Fort_Knox> <http://dbpedia.org/property/location> ?uri . }"
    }
  },
  {
    "id": 173,
    "string": "How many children did Benjamin Franklin have?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  <http://dbpedia.org/resource/Benjamin_Franklin> <http://dbpedia.org/ontology/child> ?uri . } "
    }
  },
  {
    "id": 174,
    "string": "When did Michael Jackson die?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Michael_Jackson> <http://dbpedia.org/ontology/deathDate> ?date . } "
    }
  },
  {
    "id": 175,
    "string": "Which Chess players died in the same place they were born in?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ChessPlayer> .  ?uri <http://dbpedia.org/ontology/birthPlace> ?x .  ?uri <http://dbpedia.org/ontology/deathPlace> ?y .  FILTER (?x = ?y) . } "
    }
  },
  {
    "id": 176,
    "string": "List the children of Margaret Thatcher.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Margaret_Thatcher> <http://dbpedia.org/ontology/child> ?uri . } "
    }
  },
  {
    "id": 177,
    "string": "Who was called Frank The Tank?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/property/nickname> 'Frank The Tank'@en . } "
    }
  },
  {
    "id": 178,
    "string": "Was Margaret Thatcher a chemist?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Margaret_Thatcher> <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Chemist> . } "
    }
  },
  {
    "id": 179,
    "string": "Was Marc Chagall a jew?",
    "sparql": {
      "sparql": "ASK WHERE { <http://dbpedia.org/resource/Marc_Chagall> <http://dbpedia.org/property/ethnicity> 'Jewish'@en . } "
    }
  },
  {
    "id": 180,
    "string": "Give me all books by William Goldman with more than 300 pages.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> .  ?uri <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/William_Goldman> .  ?uri <http://dbpedia.org/ontology/numberOfPages> ?x .  FILTER (?x > 300) } "
    }
  },
  {
    "id": 181,
    "string": "Which books by Kerouac were published by Viking Press?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> .  ?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Viking_Press> .  ?uri <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Jack_Kerouac> . } "
    }
  },
  {
    "id": 182,
    "string": "Give me a list of all American inventions.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/AmericanInventions> . } "
    }
  },
  {
    "id": 183,
    "string": "How high is the Mount Everest?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?num WHERE {  <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/elevation> ?num. } "
    }
  },
  {
    "id": 184,
    "string": "Who created Batman?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Batman> <http://dbpedia.org/ontology/creator> ?uri . } "
    }
  },
  {
    "id": 185,
    "string": "How many people live in the capital of Australia?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?num WHERE {  <http://dbpedia.org/resource/Australia> <http://dbpedia.org/ontology/capital> ?x .  ?x <http://dbpedia.org/ontology/populationTotal> ?num . } "
    }
  },
  {
    "id": 186,
    "string": "What is the largest city in Australia?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Australia> <http://dbpedia.org/ontology/largestCity> ?uri . } "
    }
  },
  {
    "id": 187,
    "string": "Who composed the music for Harold and Maude?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harold_and_Maude> <http://dbpedia.org/ontology/musicComposer> ?uri . } "
    }
  },
  {
    "id": 188,
    "string": "Which films starring Clint Eastwood did he direct himself?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Clint_Eastwood> .  ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Clint_Eastwood> . } "
    }
  },
  {
    "id": 189,
    "string": "In which city was the former Dutch queen Juliana buried?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Juliana_of_the_Netherlands> <http://dbpedia.org/ontology/restingPlace> ?uri.  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement> . } "
    }
  },
  {
    "id": 190,
    "string": "Where is the residence of the prime minister of Spain?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Prime_Minister_of_Spain> <http://dbpedia.org/property/residence> ?uri . } "
    }
  },
  {
    "id": 191,
    "string": "Which U.S. state has the abbreviation MN?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/StatesOfTheUnitedStates> .  ?uri <http://dbpedia.org/property/postalabbreviation> 'MN'@en . } "
    }
  },
  {
    "id": 192,
    "string": "Show me all songs from Bruce Springsteen released between 1980 and 1990.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song> .  ?uri <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Bruce_Springsteen> .  ?uri <http://dbpedia.org/ontology/releaseDate> ?date .  FILTER (?date >= '1980-01-01'^^xsd:date && ?date <= '1990-12-31'^^xsd:date) } "
    }
  },
  {
    "id": 193,
    "string": "Which movies did Kurosawa direct?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Akira_Kurosawa> . } "
    }
  },
  {
    "id": 194,
    "string": "What is the founding year of the brewery that produces Pilsner Urquell?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?num WHERE {  <http://dbpedia.org/resource/Pilsner_Urquell> <http://dbpedia.org/property/brewery> ?uri .  ?uri <http://dbpedia.org/property/foundation> ?num . } "
    }
  },
  {
    "id": 195,
    "string": "Who wrote the lyrics for the Polish national anthem?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Poland> <http://dbpedia.org/ontology/anthem> ?x .  ?x <http://dbpedia.org/property/author> ?uri . } "
    }
  },
  {
    "id": 196,
    "string": "Give me all B-sides of the Ramones.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?string WHERE {  ?x <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Ramones> .  ?x <http://dbpedia.org/ontology/bSide> ?string . } "
    }
  },
  {
    "id": 197,
    "string": "Who painted The Storm on the Sea of Galilee?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/The_Storm_on_the_Sea_of_Galilee> <http://dbpedia.org/property/artist> ?uri . } "
    }
  },
  {
    "id": 198,
    "string": "Which country does the creator of Miffy come from?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Miffy> <http://dbpedia.org/ontology/creator> ?x .  ?x <http://dbpedia.org/ontology/nationality> ?uri . } "
    }
  },
  {
    "id": 199,
    "string": "For which label did Elvis record his first album?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album> .  ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Elvis_Presley> .  ?x <http://dbpedia.org/ontology/releaseDate> ?y .  ?x <http://dbpedia.org/ontology/recordLabel> ?uri . } ORDER BY ASC(?y) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 200,
    "string": "Who produces Orangina?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Orangina> . } "
    }
  },
  {
    "id": 201,
    "string": "Give me all taikonauts.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut> .  ?uri <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/China> . } "
    }
  },
  {
    "id": 202,
    "string": "How many languages are spoken in Colombia?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Language> .  <http://dbpedia.org/resource/Colombia> <http://dbpedia.org/ontology/language> ?uri . } "
    }
  },
  {
    "id": 203,
    "string": "Which poet wrote the most books?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Poet> .  ?x <http://dbpedia.org/ontology/author> ?uri .  ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 204,
    "string": "How many programming languages are there?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProgrammingLanguage> . } "
    }
  },
  {
    "id": 205,
    "string": "Give me all Dutch parties.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .  ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Netherlands> . } "
    }
  },
  {
    "id": 206,
    "string": "When was Olof Palme shot?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Olof_Palme> <http://dbpedia.org/ontology/deathDate> ?date . } "
    }
  },
  {
    "id": 207,
    "string": "Does the Isar flow into a lake?",
    "sparql": {
      "sparql": "ASK WHERE {  ?x <http://dbpedia.org/ontology/inflow> <http://dbpedia.org/resource/Isar> .  ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lake> . } "
    }
  },
  {
    "id": 208,
    "string": "Which rivers flow into a German lake?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River> .  ?x <http://dbpedia.org/ontology/inflow> ?uri .  ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lake> .  ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Germany> . } "
    }
  },
  {
    "id": 209,
    "string": "How heavy is Jupiter's lightest moon?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?n WHERE {  ?uri <http://dbpedia.org/property/satelliteOf> <http://dbpedia.org/resource/Jupiter> .  ?uri <http://dbpedia.org/ontology/mass> ?n . } ORDER BY ASC(?n) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 210,
    "string": "Who is the youngest Darts player?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/DartsPlayer> .  ?uri <http://dbpedia.org/ontology/birthDate> ?date . } ORDER BY DESC(?date) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 211,
    "string": "Give me all animals that are extinct.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Animal> .  ?uri <http://dbpedia.org/ontology/conservationStatus> 'EX'^^<http://www.w3.org/2001/XMLSchema#string> . }"
    }
  },
  {
    "id": 212,
    "string": "How many pages does War and Peace have?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?n WHERE {  <http://dbpedia.org/resource/War_and_Peace> <http://dbpedia.org/ontology/numberOfPages> ?n . } "
    }
  },
  {
    "id": 213,
    "string": "Which ingredients do I need for carrot cake?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Carrot_cake> <http://dbpedia.org/ontology/ingredient> ?uri . } "
    }
  },
  {
    "id": 214,
    "string": "What is the most frequent cause of death?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?x WHERE {  ?uri <http://dbpedia.org/ontology/deathCause> ?x . } ORDER BY DESC(COUNT(DISTINCT ?uri)) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 215,
    "string": "Who has Tom Cruise been married to?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Tom_Cruise> . } "
    }
  },
  {
    "id": 216,
    "string": "Who is the tallest player of the Atlanta Falcons?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Atlanta_Falcons> .  ?uri <http://dbpedia.org/ontology/height> ?h . } ORDER BY DESC(?h) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 217,
    "string": "What is the bridge with the longest span?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge> .  ?uri <http://dbpedia.org/ontology/mainspan> ?s . } ORDER BY DESC(?s) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 218,
    "string": "Give me all films produced by Steven Spielberg with a budget of at least $80 million.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Steven_Spielberg> .  ?uri <http://dbpedia.org/ontology/budget> ?b .  FILTER( xsd:double(?b) >= 8.0E7 ) } "
    }
  },
  {
    "id": 219,
    "string": "Is Cola a beverage?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Cola> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage> . } "
    }
  },
  {
    "id": 220,
    "string": "Which actor was casted in the most movies?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .  ?f <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?f <http://dbpedia.org/ontology/starring> ?uri . } ORDER BY DESC(COUNT(DISTINCT(?f))) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 221,
    "string": "Where was Bach born?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Johann_Sebastian_Bach> <http://dbpedia.org/ontology/birthPlace> ?uri . } "
    }
  },
  {
    "id": 222,
    "string": "Which of Tim Burton's films had the highest budget?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Tim_Burton> .  ?uri <http://dbpedia.org/ontology/budget> ?b . } ORDER BY ?b OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 223,
    "string": "Does Abraham Lincoln's death place have a website?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Abraham_Lincoln> <http://dbpedia.org/ontology/deathPlace> ?p .  ?p <http://dbpedia.org/property/website> ?w . } "
    }
  },
  {
    "id": 224,
    "string": "Who are the four youngest MVP basketball players?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer> .  ?uri <http://dbpedia.org/ontology/birthDate> ?date.  ?uri <http://dbpedia.org/property/highlights> ?h .  FILTER regex(?h,'MVP') } ORDER BY DESC(?date) OFFSET 0 LIMIT 4 "
    }
  },
  {
    "id": 225,
    "string": "What are the top-10 action role-playing video games according to IGN?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://purl.org/dc/terms/subject> <http://dbpedia.org/resource/Category:Action_role-playing_video_games> .  ?uri <http://dbpedia.org/property/ign> ?score . } ORDER BY DESC(?score) LIMIT 10 "
    }
  },
  {
    "id": 226,
    "string": "Give me all actors who were born in Berlin.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .  ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Berlin> . } "
    }
  },
  {
    "id": 227,
    "string": "Give me all actors who were born in Paris after 1950.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> .  ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Paris> .  ?uri <http://dbpedia.org/ontology/birthDate> ?date .  FILTER ( ?date >= xsd:dateTime('1950-12-31T00:00:00Z')) } "
    }
  },
  {
    "id": 228,
    "string": "What was Brazil's lowest rank in the FIFA World Ranking?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?n WHERE {  <http://dbpedia.org/resource/Brazil_national_football_team> <http://dbpedia.org/property/fifaMin> ?n . } "
    }
  },
  {
    "id": 229,
    "string": "Give me all Australian metalcore bands.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band> .  ?uri <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Metalcore> . { ?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Australia> . } UNION { ?uri <http://dbpedia.org/ontology/hometown> ?h .  ?h <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> . } } "
    }
  },
  {
    "id": 230,
    "string": "When is Halloween?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Halloween> <http://dbpedia.org/property/date> ?date . } "
    }
  },
  {
    "id": 231,
    "string": "How many inhabitants does the largest city in Canada have?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?num WHERE {  <http://dbpedia.org/resource/Canada> <http://dbpedia.org/ontology/largestCity> ?city .  ?city <http://dbpedia.org/ontology/populationTotal> ?num . } "
    }
  },
  {
    "id": 232,
    "string": "In which countries can you pay using the West African CFA franc?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/West_African_CFA_franc> . } "
    }
  },
  {
    "id": 233,
    "string": "Give me the capitals of all countries that the Himalayas run through.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Himalayas> <http://dbpedia.org/property/country> ?country .  ?country <http://dbpedia.org/ontology/capital> ?uri . } "
    }
  },
  {
    "id": 234,
    "string": "Who was the first to climb Mount Everest?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/firstAscentPerson> ?uri . } "
    }
  },
  {
    "id": 235,
    "string": "To which artistic movement did the painter of The Three Dancers belong?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/The_Three_Dancers> <http://dbpedia.org/ontology/author> ?person .  ?person <http://dbpedia.org/ontology/movement> ?uri . } "
    }
  },
  {
    "id": 236,
    "string": "Which pope succeeded John Paul II?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Pope_John_Paul_II> <http://dbpedia.org/property/successor> ?uri . } "
    }
  },
  {
    "id": 237,
    "string": "What was the last movie with Alec Guinness?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> .  ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Alec_Guinness> .  ?uri <http://dbpedia.org/ontology/releaseDate> ?date . } ORDER BY DESC(?date) LIMIT 1 "
    }
  },
  {
    "id": 238,
    "string": "How many James Bond movies are there?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JamesBondFilms> . } "
    }
  },
  {
    "id": 239,
    "string": "Which actor played Chewbacca?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Chewbacca> <http://dbpedia.org/property/portrayer> ?uri . } "
    }
  },
  {
    "id": 240,
    "string": "Give me the grandchildren of Elvis Presley.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elvis_Presley> <http://dbpedia.org/ontology/child> ?child . ?child <http://dbpedia.org/ontology/child> ?uri . }"
    }
  },
  {
    "id": 241,
    "string": "Give me all writers that won the Nobel Prize in literature.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer> .  ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Literature> . } "
    }
  },
  {
    "id": 242,
    "string": "What is the official color of the University of Oxford?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?string WHERE {  <http://dbpedia.org/resource/University_of_Oxford> <http://dbpedia.org/ontology/officialSchoolColour> ?string . } "
    }
  },
  {
    "id": 243,
    "string": "Give me all Swedish oceanographers.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Oceanography> .  ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sweden> . } "
    }
  },
  {
    "id": 244,
    "string": "How deep is Lake Chiemsee?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?n WHERE {  <http://dbpedia.org/resource/Chiemsee> <http://dbpedia.org/ontology/depth> ?n . } "
    }
  },
  {
    "id": 245,
    "string": "Is James Bond married?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/James_Bond> <http://dbpedia.org/ontology/spouse> ?uri . } "
    }
  },
  {
    "id": 246,
    "string": "Which rockets were launched from Baikonur?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rocket> .  ?uri <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Baikonur_Cosmodrome> . } "
    }
  },
  {
    "id": 247,
    "string": "Give me all actors called Baldwin.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri foaf:surname 'Baldwin'@en . { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Actor> . } UNION { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Actor> . } } "
    }
  },
  {
    "id": 248,
    "string": "What does ICRO stand for?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/abbreviation> 'ICRO'^^<http://www.w3.org/2001/XMLSchema#string> . } "
    }
  },
  {
    "id": 249,
    "string": "In which studio did the Beatles record their first album?",
    "sparql": {}
  },
  {
    "id": 250,
    "string": "How many gold medals did Michael Phelps win at the 2008 Olympics?",
    "sparql": {}
  },
  {
    "id": 251,
    "string": "Which companies have more than 1 million employees?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company> . { ?uri <http://dbpedia.org/ontology/numberOfEmployees> ?n . } UNION { ?uri <http://dbpedia.org/property/numEmployees> ?n . } FILTER ( ?n > 1000000 ) } "
    }
  },
  {
    "id": 252,
    "string": "Give all swimmers that were born in Moscow.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Swimmer> .  ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Moscow> . } "
    }
  },
  {
    "id": 253,
    "string": "Who was called Rodzilla?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/property/nickname> \"Rodzilla\"@en . } "
    }
  },
  {
    "id": 254,
    "string": "Show me the book that Muhammad Ali wrote.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> .  ?uri <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Muhammad_Ali> . } "
    }
  },
  {
    "id": 255,
    "string": "How many museums does Paris have?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Museum> .  ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Paris> . } "
    }
  },
  {
    "id": 256,
    "string": "Which city has the most inhabitants?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City> .  ?uri <http://dbpedia.org/ontology/populationTotal> ?pop . } ORDER BY DESC(?pop) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 257,
    "string": "Which city has the least inhabitants?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City> .  ?uri <http://dbpedia.org/ontology/populationTotal> ?pop . } ORDER BY ASC(?pop) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 258,
    "string": "Give me all the TV shows with Neil Patrick Harris.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow> .  ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Neil_Patrick_Harris> . } "
    }
  },
  {
    "id": 259,
    "string": "Who wrote The Hunger Games?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/The_Hunger_Games> <http://dbpedia.org/property/creator> ?uri . } "
    }
  },
  {
    "id": 260,
    "string": "Show a list of soccer clubs that play in the Bundesliga.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub> .  ?uri <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Bundesliga> . } "
    }
  },
  {
    "id": 261,
    "string": "What country is Mount Everest in?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/locatedInArea> ?uri .  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . } "
    }
  },
  {
    "id": 262,
    "string": "Who is the founder of Penguin Books?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Penguin_Books> <http://dbpedia.org/ontology/founder> ?uri . } "
    }
  },
  {
    "id": 263,
    "string": "Which programming languages influenced Javascript?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProgrammingLanguage> .  ?uri <http://dbpedia.org/ontology/influenced> <http://dbpedia.org/resource/JavaScript> . } "
    }
  },
  {
    "id": 264,
    "string": "Did Che Guevara have children?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Che_Guevara> <http://dbpedia.org/ontology/child> ?uri . } "
    }
  },
  {
    "id": 265,
    "string": "List all the musicals with music by Leonard Bernstein.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical> .  ?uri <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Leonard_Bernstein> . } "
    }
  },
  {
    "id": 266,
    "string": "Show me all the breweries in Australia.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri ?x WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Brewery> . { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Australia> . } UNION { ?uri <http://dbpedia.org/ontology/location> ?x .  ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Australia> . } } "
    }
  },
  {
    "id": 267,
    "string": "When was the Titanic completed?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/RMS_Titanic> <http://dbpedia.org/ontology/completionDate> ?date . } "
    }
  },
  {
    "id": 268,
    "string": "How much did Pulp Fiction cost?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?n WHERE {  <http://dbpedia.org/resource/Pulp_Fiction> <http://dbpedia.org/ontology/budget> ?n . } "
    }
  },
  {
    "id": 269,
    "string": "How many airlines are there?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline> . } "
    }
  },
  {
    "id": 270,
    "string": "Who played Agent Smith in Matrix?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Agent_Smith> <http://dbpedia.org/property/portrayer> ?uri . } "
    }
  },
  {
    "id": 271,
    "string": "How much carbs does peanut butter have?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?carbs WHERE {  <http://dbpedia.org/resource/Peanut_butter> <http://dbpedia.org/property/carbs> ?carbs . } "
    }
  },
  {
    "id": 272,
    "string": "Which book has the most pages?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> .  ?uri <http://dbpedia.org/ontology/numberOfPages> ?n . } ORDER BY DESC(?n) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 273,
    "string": "Which bridges cross the Seine?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge> .  ?uri <http://dbpedia.org/ontology/crosses> <http://dbpedia.org/resource/Seine> . } "
    }
  },
  {
    "id": 274,
    "string": "Who is the mayor of the capital of French Polynesia?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/French_Polynesia> <http://dbpedia.org/ontology/capital> ?x .  ?x <http://dbpedia.org/ontology/mayor> ?uri . } "
    }
  },
  {
    "id": 275,
    "string": "When did Dracula's creator die?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Count_Dracula> <http://dbpedia.org/ontology/creator> ?x .  ?x <http://dbpedia.org/ontology/deathDate> ?date . } "
    }
  },
  {
    "id": 276,
    "string": "What is the location of the Houses of Parliament?",
    "sparql": {
      "sparql": "SELECT ?uri WHERE {  <http://dbpedia.org/resource/Palace_of_Westminster> <http://dbpedia.org/ontology/location> ?uri . } "
    }
  },
  {
    "id": 277,
    "string": "Show me all English Gothic buildings in Kent.",
    "sparql": {
      "sparql": "SELECT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building> .  ?uri <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/English_Gothic_architecture> .  ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Kent> . } "
    }
  },
  {
    "id": 278,
    "string": "Who was the pope that founded the Vatican Television?",
    "sparql": {
      "sparql": "SELECT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pope> .  <http://dbpedia.org/resource/Vatican_Television_Center> <http://dbpedia.org/ontology/foundedBy> ?uri . } "
    }
  },
  {
    "id": 279,
    "string": "What airlines are part of the SkyTeam alliance?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline> .  { ?uri <http://dbpedia.org/property/alliance> <http://dbpedia.org/resource/SkyTeam> . }  UNION  { ?uri <http://dbpedia.org/ontology/Alliance> <http://dbpedia.org/resource/SkyTeam> . } } "
    }
  },
  {
    "id": 280,
    "string": "What is the total population of Melbourne, Florida?",
    "sparql": {
      "sparql": "SELECT ?uri WHERE {  <http://dbpedia.org/resource/Melbourne,_Florida> <http://dbpedia.org/ontology/populationTotal> ?uri . } "
    }
  },
  {
    "id": 281,
    "string": "Which airports does Yeti Airlines serve?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Yeti_Airlines> <http://dbpedia.org/ontology/targetAirport> ?uri . }"
    }
  },
  {
    "id": 282,
    "string": "In which year was Rachel Stevens born?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Rachel_Stevens> <http://dbpedia.org/ontology/birthYear> ?uri . } "
    }
  },
  {
    "id": 283,
    "string": "Where was JFK assassinated?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/John_F._Kennedy> <http://dbpedia.org/ontology/deathPlace> ?uri . } "
    }
  },
  {
    "id": 284,
    "string": "How many politicians graduated from Columbia University?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> .  ?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Columbia_University> . } "
    }
  },
  {
    "id": 285,
    "string": "Which scientist is known for the Manhattan Project and the Nobel Peace Prize?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Manhattan_Project> .  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist> .  ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Nobel_Peace_Prize> . } "
    }
  },
  {
    "id": 286,
    "string": "What is the highest volcano in Africa?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Volcano> .  ?uri <http://dbpedia.org/ontology/locatedInArea> ?area .  ?area <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/AfricanCountries> .  ?uri <http://dbpedia.org/ontology/elevation> ?elevation . } ORDER BY DESC(?elevation) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 287,
    "string": "Which beer originated in Ireland?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Beer> .  ?uri <http://dbpedia.org/property/origin> \"Ireland\"@en . } "
    }
  },
  {
    "id": 288,
    "string": "What are the specialities of the UNC Health Care?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/UNC_Health_Care> <http://dbpedia.org/property/speciality> ?uri . } "
    }
  },
  {
    "id": 289,
    "string": "Who is the owner of Facebook?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/ontology/foundedBy> ?uri . } "
    }
  },
  {
    "id": 290,
    "string": "From which region is the Melon de Bourgogne?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Melon_de_Bourgogne> <http://dbpedia.org/ontology/wineRegion> ?uri . } "
    }
  },
  {
    "id": 291,
    "string": "Who was influenced by Socrates?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/influencedBy> <http://dbpedia.org/resource/Socrates> . } "
    }
  },
  {
    "id": 292,
    "string": "Who was president of Pakistan in 1978?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/President_of_Pakistan> .  ?uri <http://dbpedia.org/property/years> 1978 . } "
    }
  },
  {
    "id": 293,
    "string": "Give me English actors starring in Lovesick.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Lovesick> <http://dbpedia.org/ontology/starring> ?uri .  { ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/England> . }  UNION  { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EnglishFilmActors> . } } "
    }
  },
  {
    "id": 294,
    "string": "Give me all types of eating disorders.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/EatingDisorders> . } "
    }
  },
  {
    "id": 295,
    "string": "Who was married to president Chirac?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Jacques_Chirac> <http://dbpedia.org/ontology/spouse> ?uri . } "
    }
  },
  {
    "id": 296,
    "string": "What is the largest metropolitan area in Washington state?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Washington_(state)> <http://dbpedia.org/property/largestmetro> ?uri . } "
    }
  },
  {
    "id": 297,
    "string": "Where in France is sparkling wine produced?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/wineProduced> <http://dbpedia.org/resource/Sparkling_wine> .  ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/France> . } "
    }
  },
  {
    "id": 298,
    "string": "Where did Hillel Slovak die?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Hillel_Slovak> <http://dbpedia.org/ontology/deathPlace> ?uri . } "
    }
  },
  {
    "id": 299,
    "string": "What is the timezone in San Pedro de Atacama?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/San_Pedro_de_Atacama> <http://dbpedia.org/ontology/timeZone> ?uri . } "
    }
  },
  {
    "id": 300,
    "string": "In which city does the Chile Route 68 end?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Chile_Route_68> <http://dbpedia.org/ontology/routeEnd> ?uri . } "
    }
  },
  {
    "id": 301,
    "string": "Give me all ESA astronauts.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut> .  ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/European_Space_Agency> . } "
    }
  },
  {
    "id": 302,
    "string": "Give me all Swedish holidays.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Holiday> .  ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> . } "
    }
  },
  {
    "id": 303,
    "string": "Who is the youngest Pulitzer Prize winner?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Pulitzer_Prize> .  ?uri <http://dbpedia.org/ontology/birthDate> ?d . } ORDER BY DESC(?d) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 304,
    "string": "Which animals are critically endangered?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Animal> .  ?uri <http://dbpedia.org/ontology/conservationStatus> 'CR'^^<http://www.w3.org/2001/XMLSchema#string> . } "
    }
  },
  {
    "id": 305,
    "string": "Which soccer players were born on Malta?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer> .  ?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Malta> . } "
    }
  },
  {
    "id": 306,
    "string": "Did Arnold Schwarzenegger attend a university?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Arnold_Schwarzenegger> <http://dbpedia.org/ontology/almaMater> ?x .  ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University> . } "
    }
  },
  {
    "id": 307,
    "string": "Which programming languages were influenced by Perl?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProgrammingLanguage> . { ?uri <http://dbpedia.org/ontology/influencedBy> <http://dbpedia.org/resource/Perl> . } UNION { <http://dbpedia.org/resource/Perl> <http://dbpedia.org/ontology/influenced> ?uri . } } "
    }
  },
  {
    "id": 308,
    "string": "Is Barack Obama a democrat?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Barack_Obama> <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic_Party_(United_States)> . } "
    }
  },
  {
    "id": 309,
    "string": "How many children does Eddie Murphy have?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?n WHERE {  <http://dbpedia.org/resource/Eddie_Murphy> <http://dbpedia.org/property/children> ?n . } "
    }
  },
  {
    "id": 310,
    "string": "Who is the oldest child of Meryl Streep?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Meryl_Streep> <http://dbpedia.org/ontology/child> ?uri .  ?uri <http://dbpedia.org/ontology/birthDate> ?d . } ORDER BY ASC(?d) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 311,
    "string": "Who killed John Lennon?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .  ?uri <http://dbpedia.org/property/conviction> <http://dbpedia.org/resource/Death_of_John_Lennon> . } "
    }
  },
  {
    "id": 312,
    "string": "In which city is Air China headquartered?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Air_China> <http://dbpedia.org/ontology/headquarter> ?uri .  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/City108524735> . } "
    }
  },
  {
    "id": 313,
    "string": "Which frequent flyer program has the most airlines?",
    "sparql": {
      "sparql": "SELECT ?uri WHERE {  ?airline <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline> .  ?airline <http://dbpedia.org/property/frequentFlyer> ?uri.  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/FrequentFlyerPrograms> . } ORDER BY DESC(COUNT(DISTINCT ?airline)) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 314,
    "string": "Which artists were born on the same date as Rachel Stevens?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist> . <http://dbpedia.org/resource/Rachel_Stevens> <http://dbpedia.org/property/dateOfBirth> ?date . ?uri <http://dbpedia.org/property/dateOfBirth> ?date . } "
    }
  },
  {
    "id": 315,
    "string": "How many scientists graduated from an Ivy League university?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist> . ?uri <http://dbpedia.org/ontology/almaMater> ?university . ?university <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Ivy_League> . } "
    }
  },
  {
    "id": 316,
    "string": "Which types of grapes grow in Oregon?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oregon_wine> <http://dbpedia.org/ontology/growingGrape> ?uri . } "
    }
  },
  {
    "id": 317,
    "string": "Who is starring in Spanish movies produced by Benicio del Toro?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { ?film <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?film <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Spain> . ?film <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Benicio_del_Toro> . ?film <http://dbpedia.org/ontology/starring> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> . } "
    }
  },
  {
    "id": 318,
    "string": "Who is the manager of Real Madrid?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Real_Madrid_C.F.> <http://dbpedia.org/ontology/manager> ?uri . } "
    }
  },
  {
    "id": 319,
    "string": "Give me the currency of China.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/China> <http://dbpedia.org/ontology/currency> ?uri . } "
    }
  },
  {
    "id": 320,
    "string": "Which movies starring Mickey Rourke were directed by Guy Ritchie?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Mickey_Rourke> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Guy_Ritchie> . } "
    }
  },
  {
    "id": 321,
    "string": "Is Darth Vader Luke\u00e2\u20ac\u2122s father?",
    "sparql": {
      "sparql": "ASK WHERE { <http://dbpedia.org/resource/Darth_Vader> <http://dbpedia.org/property/children> \"Luke Skywalker\"@en . }"
    }
  },
  {
    "id": 322,
    "string": "How many companies were founded by the founder of Facebook?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/ontology/foundedBy> ?uri .  ?uri <http://dbpedia.org/ontology/foundedBy> ?uri . } "
    }
  },
  {
    "id": 323,
    "string": "How many companies were founded in the same year as Google?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company> .  ?uri <http://dbpedia.org/ontology/foundingYear> ?year .  <http://dbpedia.org/resource/Google> <http://dbpedia.org/ontology/foundingYear> ?year . } "
    }
  },
  {
    "id": 324,
    "string": "Which subsidiary of TUI Travel serves both Glasgow and Dublin?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/TUI_Travel> <http://dbpedia.org/ontology/subsidiary> ?uri .  ?uri <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_Airport> . ?uri <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Dublin_Airport> . } "
    }
  },
  {
    "id": 325,
    "string": "How many airlines are members of the Star Alliance?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline> .  ?uri <http://dbpedia.org/property/alliance> <http://dbpedia.org/resource/Star_Alliance> . } "
    }
  },
  {
    "id": 326,
    "string": "Give me all spacecrafts that flew to Mars.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Spacecraft> .  ?uri <http://dbpedia.org/property/planet> <http://dbpedia.org/resource/Mars> . } "
    }
  },
  {
    "id": 327,
    "string": "Which musician wrote the most books?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Musician> .  ?x <http://dbpedia.org/ontology/author> ?uri .  ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book> . } ORDER BY DESC(COUNT(?x)) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 328,
    "string": "Show me everyone who was born on Halloween.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> . { ?uri <http://dbpedia.org/ontology/birthDate> ?date . } UNION { ?uri <http://dbpedia.org/property/birthDate> ?date . }  <http://dbpedia.org/resource/Halloween> <http://dbpedia.org/property/date> ?date . } "
    }
  },
  {
    "id": 329,
    "string": "Give me all Swiss non-profit organizations.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Nonprofit_organization> . { ?uri <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/Switzerland> . } UNION { ?uri <http://dbpedia.org/ontology/location> ?x .  ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Switzerland> . } } "
    }
  },
  {
    "id": 330,
    "string": "In which country is Mecca located?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Mecca> <http://dbpedia.org/ontology/country> ?uri . } "
    }
  },
  {
    "id": 331,
    "string": "What is the net income of Apple?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?ni WHERE {  <http://dbpedia.org/resource/Apple_Inc.> <http://dbpedia.org/ontology/netIncome> ?ni . } "
    }
  },
  {
    "id": 332,
    "string": "What does the abbreviation FIFA stand for?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?name WHERE {  <http://dbpedia.org/resource/FIFA> <http://dbpedia.org/property/name> ?name . } "
    }
  },
  {
    "id": 333,
    "string": "When did the Ming dynasty dissolve?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?date WHERE {  <http://dbpedia.org/resource/Ming_dynasty> <http://dbpedia.org/property/dateEnd> ?date . } "
    }
  },
  {
    "id": 334,
    "string": "Which museum in New York has the most visitors?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Museum> .  ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/New_York_City> .  ?uri <http://dbpedia.org/ontology/numberOfVisitors> ?num . } ORDER BY DESC(?num) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 335,
    "string": "Is Lake Baikal bigger than the Great Bear Lake?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Lake_Baikal> <http://dbpedia.org/ontology/areaTotal> ?a1 .  <http://dbpedia.org/resource/Great_Bear_Lake> <http://dbpedia.org/ontology/areaTotal> ?a2 .  FILTER (?a1 > ?a2) } "
    }
  },
  {
    "id": 336,
    "string": "Desserts from which country contain fish?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Dessert> .  ?x <http://dbpedia.org/ontology/origin> ?uri .  ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Fish> . } "
    }
  },
  {
    "id": 337,
    "string": "What is the highest mountain in Italy?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> .  ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Italy> .  ?uri <http://dbpedia.org/ontology/elevation> ?num . } ORDER BY DESC(?num) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 338,
    "string": "Where did the architect of the Eiffel Tower study?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Eiffel_Tower> <http://dbpedia.org/ontology/architect> ?x .  ?x <http://dbpedia.org/property/almaMater> ?uri . } "
    }
  },
  {
    "id": 339,
    "string": "Which Greek parties are pro-European?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty> .  ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Greece> .  ?uri <http://dbpedia.org/ontology/ideology> <http://dbpedia.org/resource/Pro-Europeanism> . } "
    }
  },
  {
    "id": 340,
    "string": "What is the height difference between Mount Everest and K2?",
    "sparql": {
      "sparql": "SELECT DISTINCT (?h1-?h2) WHERE {  <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/elevation> ?h1 .  <http://dbpedia.org/resource/K2> <http://dbpedia.org/ontology/elevation> ?h2 . } "
    }
  },
  {
    "id": 341,
    "string": "Who is the mayor of Rotterdam?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Rotterdam> <http://dbpedia.org/ontology/leaderName> ?uri . } "
    }
  },
  {
    "id": 342,
    "string": "In which city were the parents of Che Guevara born?",
    "sparql": {}
  },
  {
    "id": 343,
    "string": "How high is the lighthouse in Colombo?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?num WHERE {  <http://dbpedia.org/resource/Colombo_Lighthouse> <http://dbpedia.org/ontology/height> ?num . } "
    }
  },
  {
    "id": 344,
    "string": "Are Taiko a kind of Japanese musical instruments?",
    "sparql": {
      "sparql": "ASK WHERE {  <http://dbpedia.org/resource/Taiko> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/class/yago/JapaneseMusicalInstruments> . } "
    }
  },
  {
    "id": 345,
    "string": "How many ethnic groups live in Slovenia?",
    "sparql": {
      "sparql": "SELECT (COUNT(DISTINCT ?uri) as ?c) WHERE {  <http://dbpedia.org/resource/Slovenia> <http://dbpedia.org/ontology/ethnicGroup> ?uri . } "
    }
  },
  {
    "id": 346,
    "string": "List the seven kings of Rome.",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/King_of_Rome> . } "
    }
  },
  {
    "id": 347,
    "string": "Who were the parents of Queen Victoria?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  <http://dbpedia.org/resource/Queen_Victoria> <http://dbpedia.org/ontology/parent> ?uri . } "
    }
  },
  {
    "id": 348,
    "string": "Who is the heaviest player of the Chicago Bulls?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person> .  ?uri <http://dbpedia.org/ontology/weight> ?num . { ?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> . } UNION { ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> . } UNION { ?uri <http://dbpedia.org/ontology/draftTeam> <http://dbpedia.org/resource/Chicago_Bulls> . } } ORDER BY DESC(?num) OFFSET 0 LIMIT 1 "
    }
  },
  {
    "id": 349,
    "string": "Which volcanos in Japan erupted since 2000?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Volcano> .  ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Japan> .  ?uri <http://dbpedia.org/ontology/eruptionYear> ?date .  FILTER (year(?date) >= 2000) } "
    }
  },
  {
    "id": 350,
    "string": "Who is the tallest basketball player?",
    "sparql": {
      "sparql": "SELECT DISTINCT ?uri WHERE {  ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer> .  ?uri <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) OFFSET 0 LIMIT 1 "
    }
  }
]